<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="790" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="773.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="773.00"> </text><svg id="frames" x="10" width="1180" total_samples="27"><g><title>core::ptr::drop_in_place&lt;source_code_parser::prophet::component::ModuleComponent&gt; (1 samples, 3.70%)</title><rect x="0.0000%" y="373" width="3.7037%" height="15" fill="rgb(210,8,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="383.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent&gt; (1 samples, 3.70%)</title><rect x="0.0000%" y="357" width="3.7037%" height="15" fill="rgb(253,123,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="367.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;source_code_parser::prophet::component::ContainerComponent&gt; (1 samples, 3.70%)</title><rect x="0.0000%" y="341" width="3.7037%" height="15" fill="rgb(243,147,51)" fg:x="0" fg:w="1"/><text x="0.2500%" y="351.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;source_code_parser::prophet::component::MethodComponent&gt; (1 samples, 3.70%)</title><rect x="0.0000%" y="325" width="3.7037%" height="15" fill="rgb(243,177,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="335.50">core..</text></g><g><title>_rjem_sdallocx (1 samples, 3.70%)</title><rect x="0.0000%" y="309" width="3.7037%" height="15" fill="rgb(209,87,15)" fg:x="0" fg:w="1"/><text x="0.2500%" y="319.50">_rje..</text></g><g><title>isfree (1 samples, 3.70%)</title><rect x="0.0000%" y="293" width="3.7037%" height="15" fill="rgb(233,200,9)" fg:x="0" fg:w="1"/><text x="0.2500%" y="303.50">isfr..</text></g><g><title>isdalloct (1 samples, 3.70%)</title><rect x="0.0000%" y="277" width="3.7037%" height="15" fill="rgb(240,7,14)" fg:x="0" fg:w="1"/><text x="0.2500%" y="287.50">isda..</text></g><g><title>arena_sdalloc (1 samples, 3.70%)</title><rect x="0.0000%" y="261" width="3.7037%" height="15" fill="rgb(224,159,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="271.50">aren..</text></g><g><title>tcache_dalloc_small (1 samples, 3.70%)</title><rect x="0.0000%" y="245" width="3.7037%" height="15" fill="rgb(235,12,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="255.50">tcac..</text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 3.70%)</title><rect x="0.0000%" y="229" width="3.7037%" height="15" fill="rgb(235,31,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="239.50">_rje..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 3.70%)</title><rect x="3.7037%" y="325" width="3.7037%" height="15" fill="rgb(212,146,38)" fg:x="1" fg:w="1"/><text x="3.9537%" y="335.50">&lt;has..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 3.70%)</title><rect x="3.7037%" y="309" width="3.7037%" height="15" fill="rgb(251,211,24)" fg:x="1" fg:w="1"/><text x="3.9537%" y="319.50">&lt;has..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 3.70%)</title><rect x="3.7037%" y="293" width="3.7037%" height="15" fill="rgb(248,191,29)" fg:x="1" fg:w="1"/><text x="3.9537%" y="303.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 3.70%)</title><rect x="3.7037%" y="277" width="3.7037%" height="15" fill="rgb(228,12,10)" fg:x="1" fg:w="1"/><text x="3.9537%" y="287.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 3.70%)</title><rect x="3.7037%" y="261" width="3.7037%" height="15" fill="rgb(224,19,26)" fg:x="1" fg:w="1"/><text x="3.9537%" y="271.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (1 samples, 3.70%)</title><rect x="3.7037%" y="245" width="3.7037%" height="15" fill="rgb(252,72,23)" fg:x="1" fg:w="1"/><text x="3.9537%" y="255.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 3.70%)</title><rect x="3.7037%" y="229" width="3.7037%" height="15" fill="rgb(231,177,37)" fg:x="1" fg:w="1"/><text x="3.9537%" y="239.50">&lt;T a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 3.70%)</title><rect x="3.7037%" y="213" width="3.7037%" height="15" fill="rgb(224,72,29)" fg:x="1" fg:w="1"/><text x="3.9537%" y="223.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 3.70%)</title><rect x="3.7037%" y="197" width="3.7037%" height="15" fill="rgb(231,36,44)" fg:x="1" fg:w="1"/><text x="3.9537%" y="207.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 3.70%)</title><rect x="3.7037%" y="181" width="3.7037%" height="15" fill="rgb(242,138,10)" fg:x="1" fg:w="1"/><text x="3.9537%" y="191.50">allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 3.70%)</title><rect x="3.7037%" y="165" width="3.7037%" height="15" fill="rgb(253,76,35)" fg:x="1" fg:w="1"/><text x="3.9537%" y="175.50">&lt;all..</text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 3.70%)</title><rect x="3.7037%" y="149" width="3.7037%" height="15" fill="rgb(249,196,1)" fg:x="1" fg:w="1"/><text x="3.9537%" y="159.50">allo..</text></g><g><title>alloc::alloc::alloc (1 samples, 3.70%)</title><rect x="3.7037%" y="133" width="3.7037%" height="15" fill="rgb(241,218,49)" fg:x="1" fg:w="1"/><text x="3.9537%" y="143.50">allo..</text></g><g><title>_rjem_mallocx (1 samples, 3.70%)</title><rect x="3.7037%" y="117" width="3.7037%" height="15" fill="rgb(222,146,7)" fg:x="1" fg:w="1"/><text x="3.9537%" y="127.50">_rje..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 7.41%)</title><rect x="7.4074%" y="325" width="7.4074%" height="15" fill="rgb(223,174,20)" fg:x="2" fg:w="2"/><text x="7.6574%" y="335.50">&lt;hashbrown..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 7.41%)</title><rect x="7.4074%" y="309" width="7.4074%" height="15" fill="rgb(218,42,32)" fg:x="2" fg:w="2"/><text x="7.6574%" y="319.50">&lt;hashbrown..</text></g><g><title>__rg_dealloc (1 samples, 3.70%)</title><rect x="11.1111%" y="293" width="3.7037%" height="15" fill="rgb(211,100,31)" fg:x="3" fg:w="1"/><text x="11.3611%" y="303.50">__rg..</text></g><g><title>jemallocator::layout_to_flags (1 samples, 3.70%)</title><rect x="11.1111%" y="277" width="3.7037%" height="15" fill="rgb(237,126,3)" fg:x="3" fg:w="1"/><text x="11.3611%" y="287.50">jema..</text></g><g><title>__rg_alloc (1 samples, 3.70%)</title><rect x="18.5185%" y="69" width="3.7037%" height="15" fill="rgb(225,40,27)" fg:x="5" fg:w="1"/><text x="18.7685%" y="79.50">__rg..</text></g><g><title>jemallocator::layout_to_flags (1 samples, 3.70%)</title><rect x="18.5185%" y="53" width="3.7037%" height="15" fill="rgb(232,77,16)" fg:x="5" fg:w="1"/><text x="18.7685%" y="63.50">jema..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 14.81%)</title><rect x="14.8148%" y="277" width="14.8148%" height="15" fill="rgb(206,17,47)" fg:x="4" fg:w="4"/><text x="15.0648%" y="287.50">&lt;hashbrown::raw::RawTab..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 14.81%)</title><rect x="14.8148%" y="261" width="14.8148%" height="15" fill="rgb(224,162,16)" fg:x="4" fg:w="4"/><text x="15.0648%" y="271.50">&lt;hashbrown::raw::RawTab..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 14.81%)</title><rect x="14.8148%" y="245" width="14.8148%" height="15" fill="rgb(238,16,18)" fg:x="4" fg:w="4"/><text x="15.0648%" y="255.50">&lt;alloc::string::String ..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 11.11%)</title><rect x="18.5185%" y="229" width="11.1111%" height="15" fill="rgb(251,84,40)" fg:x="5" fg:w="3"/><text x="18.7685%" y="239.50">&lt;alloc::vec::Vec..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 11.11%)</title><rect x="18.5185%" y="213" width="11.1111%" height="15" fill="rgb(238,70,50)" fg:x="5" fg:w="3"/><text x="18.7685%" y="223.50">alloc::slice::&lt;i..</text></g><g><title>alloc::slice::hack::to_vec (3 samples, 11.11%)</title><rect x="18.5185%" y="197" width="11.1111%" height="15" fill="rgb(214,209,44)" fg:x="5" fg:w="3"/><text x="18.7685%" y="207.50">alloc::slice::ha..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 11.11%)</title><rect x="18.5185%" y="181" width="11.1111%" height="15" fill="rgb(238,17,34)" fg:x="5" fg:w="3"/><text x="18.7685%" y="191.50">&lt;T as alloc::sli..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 11.11%)</title><rect x="18.5185%" y="165" width="11.1111%" height="15" fill="rgb(238,47,37)" fg:x="5" fg:w="3"/><text x="18.7685%" y="175.50">alloc::vec::Vec&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 11.11%)</title><rect x="18.5185%" y="149" width="11.1111%" height="15" fill="rgb(220,147,47)" fg:x="5" fg:w="3"/><text x="18.7685%" y="159.50">alloc::raw_vec::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 11.11%)</title><rect x="18.5185%" y="133" width="11.1111%" height="15" fill="rgb(248,89,8)" fg:x="5" fg:w="3"/><text x="18.7685%" y="143.50">alloc::raw_vec::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 11.11%)</title><rect x="18.5185%" y="117" width="11.1111%" height="15" fill="rgb(223,223,24)" fg:x="5" fg:w="3"/><text x="18.7685%" y="127.50">&lt;alloc::alloc::G..</text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 11.11%)</title><rect x="18.5185%" y="101" width="11.1111%" height="15" fill="rgb(252,115,29)" fg:x="5" fg:w="3"/><text x="18.7685%" y="111.50">alloc::alloc::Gl..</text></g><g><title>alloc::alloc::alloc (3 samples, 11.11%)</title><rect x="18.5185%" y="85" width="11.1111%" height="15" fill="rgb(227,117,10)" fg:x="5" fg:w="3"/><text x="18.7685%" y="95.50">alloc::alloc::al..</text></g><g><title>_rjem_mallocx (2 samples, 7.41%)</title><rect x="22.2222%" y="69" width="7.4074%" height="15" fill="rgb(246,27,11)" fg:x="6" fg:w="2"/><text x="22.4722%" y="79.50">_rjem_mall..</text></g><g><title>imalloc (2 samples, 7.41%)</title><rect x="22.2222%" y="53" width="7.4074%" height="15" fill="rgb(232,107,54)" fg:x="6" fg:w="2"/><text x="22.4722%" y="63.50">imalloc</text></g><g><title>imalloc_body (2 samples, 7.41%)</title><rect x="22.2222%" y="37" width="7.4074%" height="15" fill="rgb(238,54,3)" fg:x="6" fg:w="2"/><text x="22.4722%" y="47.50">imalloc_bo..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 7.41%)</title><rect x="29.6296%" y="277" width="7.4074%" height="15" fill="rgb(234,48,29)" fg:x="8" fg:w="2"/><text x="29.8796%" y="287.50">&lt;hashbrown..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 7.41%)</title><rect x="29.6296%" y="261" width="7.4074%" height="15" fill="rgb(232,192,5)" fg:x="8" fg:w="2"/><text x="29.8796%" y="271.50">&lt;hashbrown..</text></g><g><title>_rjem_sdallocx (1 samples, 3.70%)</title><rect x="33.3333%" y="245" width="3.7037%" height="15" fill="rgb(211,68,17)" fg:x="9" fg:w="1"/><text x="33.5833%" y="255.50">_rje..</text></g><g><title>isfree (1 samples, 3.70%)</title><rect x="33.3333%" y="229" width="3.7037%" height="15" fill="rgb(211,207,23)" fg:x="9" fg:w="1"/><text x="33.5833%" y="239.50">isfr..</text></g><g><title>isdalloct (1 samples, 3.70%)</title><rect x="33.3333%" y="213" width="3.7037%" height="15" fill="rgb(243,222,13)" fg:x="9" fg:w="1"/><text x="33.5833%" y="223.50">isda..</text></g><g><title>arena_sdalloc (1 samples, 3.70%)</title><rect x="33.3333%" y="197" width="3.7037%" height="15" fill="rgb(226,228,15)" fg:x="9" fg:w="1"/><text x="33.5833%" y="207.50">aren..</text></g><g><title>tcache_dalloc_small (1 samples, 3.70%)</title><rect x="33.3333%" y="181" width="3.7037%" height="15" fill="rgb(246,9,33)" fg:x="9" fg:w="1"/><text x="33.5833%" y="191.50">tcac..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 3.70%)</title><rect x="37.0370%" y="277" width="3.7037%" height="15" fill="rgb(224,147,14)" fg:x="10" fg:w="1"/><text x="37.2870%" y="287.50">hash..</text></g><g><title>_rjem_sdallocx (1 samples, 3.70%)</title><rect x="37.0370%" y="261" width="3.7037%" height="15" fill="rgb(253,109,53)" fg:x="10" fg:w="1"/><text x="37.2870%" y="271.50">_rje..</text></g><g><title>isfree (1 samples, 3.70%)</title><rect x="37.0370%" y="245" width="3.7037%" height="15" fill="rgb(221,171,37)" fg:x="10" fg:w="1"/><text x="37.2870%" y="255.50">isfr..</text></g><g><title>isdalloct (1 samples, 3.70%)</title><rect x="37.0370%" y="229" width="3.7037%" height="15" fill="rgb(225,60,53)" fg:x="10" fg:w="1"/><text x="37.2870%" y="239.50">isda..</text></g><g><title>arena_sdalloc (1 samples, 3.70%)</title><rect x="37.0370%" y="213" width="3.7037%" height="15" fill="rgb(242,18,3)" fg:x="10" fg:w="1"/><text x="37.2870%" y="223.50">aren..</text></g><g><title>tcache_dalloc_small (1 samples, 3.70%)</title><rect x="37.0370%" y="197" width="3.7037%" height="15" fill="rgb(210,52,16)" fg:x="10" fg:w="1"/><text x="37.2870%" y="207.50">tcac..</text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 3.70%)</title><rect x="37.0370%" y="181" width="3.7037%" height="15" fill="rgb(245,110,36)" fg:x="10" fg:w="1"/><text x="37.2870%" y="191.50">_rje..</text></g><g><title>malloc_mutex_unlock (1 samples, 3.70%)</title><rect x="37.0370%" y="165" width="3.7037%" height="15" fill="rgb(210,196,26)" fg:x="10" fg:w="1"/><text x="37.2870%" y="175.50">mall..</text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 3.70%)</title><rect x="37.0370%" y="149" width="3.7037%" height="15" fill="rgb(236,48,9)" fg:x="10" fg:w="1"/><text x="37.2870%" y="159.50">__pt..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 3.70%)</title><rect x="40.7407%" y="181" width="3.7037%" height="15" fill="rgb(236,103,49)" fg:x="11" fg:w="1"/><text x="40.9907%" y="191.50">allo..</text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 3.70%)</title><rect x="40.7407%" y="165" width="3.7037%" height="15" fill="rgb(223,229,2)" fg:x="11" fg:w="1"/><text x="40.9907%" y="175.50">allo..</text></g><g><title>_rjem_rallocx (1 samples, 3.70%)</title><rect x="40.7407%" y="149" width="3.7037%" height="15" fill="rgb(223,22,17)" fg:x="11" fg:w="1"/><text x="40.9907%" y="159.50">_rje..</text></g><g><title>iralloct (1 samples, 3.70%)</title><rect x="40.7407%" y="133" width="3.7037%" height="15" fill="rgb(242,63,25)" fg:x="11" fg:w="1"/><text x="40.9907%" y="143.50">iral..</text></g><g><title>_rjem_je_arena_ralloc (1 samples, 3.70%)</title><rect x="40.7407%" y="117" width="3.7037%" height="15" fill="rgb(250,17,10)" fg:x="11" fg:w="1"/><text x="40.9907%" y="127.50">_rje..</text></g><g><title>isdalloct (1 samples, 3.70%)</title><rect x="40.7407%" y="101" width="3.7037%" height="15" fill="rgb(239,196,24)" fg:x="11" fg:w="1"/><text x="40.9907%" y="111.50">isda..</text></g><g><title>arena_sdalloc (1 samples, 3.70%)</title><rect x="40.7407%" y="85" width="3.7037%" height="15" fill="rgb(217,40,51)" fg:x="11" fg:w="1"/><text x="40.9907%" y="95.50">aren..</text></g><g><title>tcache_dalloc_small (1 samples, 3.70%)</title><rect x="40.7407%" y="69" width="3.7037%" height="15" fill="rgb(231,75,17)" fg:x="11" fg:w="1"/><text x="40.9907%" y="79.50">tcac..</text></g><g><title>rune::compiling::unit_builder::UnitBuilder::new_function (2 samples, 7.41%)</title><rect x="40.7407%" y="213" width="7.4074%" height="15" fill="rgb(233,58,52)" fg:x="11" fg:w="2"/><text x="40.9907%" y="223.50">rune::comp..</text></g><g><title>rune::compiling::unit_builder::Inner::add_assembly (2 samples, 7.41%)</title><rect x="40.7407%" y="197" width="7.4074%" height="15" fill="rgb(230,37,54)" fg:x="11" fg:w="2"/><text x="40.9907%" y="207.50">rune::comp..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;usize,alloc::vec::Vec&lt;alloc::string::String&gt;&gt;&gt; (1 samples, 3.70%)</title><rect x="44.4444%" y="181" width="3.7037%" height="15" fill="rgb(238,79,6)" fg:x="12" fg:w="1"/><text x="44.6944%" y="191.50">core..</text></g><g><title>rune::compiling::v1::assemble::item_fn::&lt;impl rune::compiling::v1::assemble::AssembleFn for rune::ast::item_fn::ItemFn&gt;::assemble_fn (1 samples, 3.70%)</title><rect x="48.1481%" y="213" width="3.7037%" height="15" fill="rgb(246,158,4)" fg:x="13" fg:w="1"/><text x="48.3981%" y="223.50">rune..</text></g><g><title>rune::compiling::v1::assemble::block::&lt;impl rune::compiling::v1::assemble::Assemble for rune::ast::block::Block&gt;::assemble (1 samples, 3.70%)</title><rect x="48.1481%" y="197" width="3.7037%" height="15" fill="rgb(232,53,54)" fg:x="13" fg:w="1"/><text x="48.3981%" y="207.50">rune..</text></g><g><title>rune::compiling::v1::assemble::local::&lt;impl rune::compiling::v1::assemble::Assemble for rune::ast::local::Local&gt;::assemble (1 samples, 3.70%)</title><rect x="48.1481%" y="181" width="3.7037%" height="15" fill="rgb(245,136,17)" fg:x="13" fg:w="1"/><text x="48.3981%" y="191.50">rune..</text></g><g><title>rune::compiling::v1::Compiler::compile_pat (1 samples, 3.70%)</title><rect x="48.1481%" y="165" width="3.7037%" height="15" fill="rgb(222,71,19)" fg:x="13" fg:w="1"/><text x="48.3981%" y="175.50">rune..</text></g><g><title>rune::query::Query::convert_path (1 samples, 3.70%)</title><rect x="48.1481%" y="149" width="3.7037%" height="15" fill="rgb(222,121,1)" fg:x="13" fg:w="1"/><text x="48.3981%" y="159.50">rune..</text></g><g><title>rune::compiling::compile_with_options (5 samples, 18.52%)</title><rect x="40.7407%" y="229" width="18.5185%" height="15" fill="rgb(250,85,5)" fg:x="11" fg:w="5"/><text x="40.9907%" y="239.50">rune::compiling::compile_with..</text></g><g><title>rune::worker::Worker::run (2 samples, 7.41%)</title><rect x="51.8519%" y="213" width="7.4074%" height="15" fill="rgb(226,157,7)" fg:x="14" fg:w="2"/><text x="52.1019%" y="223.50">rune::work..</text></g><g><title>&lt;rune::ast::file::File as rune::indexing::index::Index&gt;::index (1 samples, 3.70%)</title><rect x="55.5556%" y="197" width="3.7037%" height="15" fill="rgb(218,16,53)" fg:x="15" fg:w="1"/><text x="55.8056%" y="207.50">&lt;run..</text></g><g><title>&lt;rune::ast::item::Item as rune::indexing::index::Index&gt;::index (1 samples, 3.70%)</title><rect x="55.5556%" y="181" width="3.7037%" height="15" fill="rgb(234,113,0)" fg:x="15" fg:w="1"/><text x="55.8056%" y="191.50">&lt;run..</text></g><g><title>&lt;rune::ast::item_fn::ItemFn as rune::indexing::index::Index&gt;::index (1 samples, 3.70%)</title><rect x="55.5556%" y="165" width="3.7037%" height="15" fill="rgb(215,223,3)" fg:x="15" fg:w="1"/><text x="55.8056%" y="175.50">&lt;run..</text></g><g><title>rune::shared::items::Items::push_name (1 samples, 3.70%)</title><rect x="55.5556%" y="149" width="3.7037%" height="15" fill="rgb(218,143,12)" fg:x="15" fg:w="1"/><text x="55.8056%" y="159.50">rune..</text></g><g><title>rune::load::load_sources (6 samples, 22.22%)</title><rect x="40.7407%" y="261" width="22.2222%" height="15" fill="rgb(205,41,49)" fg:x="11" fg:w="6"/><text x="40.9907%" y="271.50">rune::load::load_sources</text></g><g><title>rune::load::load_sources_with_visitor (6 samples, 22.22%)</title><rect x="40.7407%" y="245" width="22.2222%" height="15" fill="rgb(230,177,28)" fg:x="11" fg:w="6"/><text x="40.9907%" y="255.50">rune::load::load_sources_with_visit..</text></g><g><title>rune::compiling::unit_builder::UnitBuilder::with_default_prelude (1 samples, 3.70%)</title><rect x="59.2593%" y="229" width="3.7037%" height="15" fill="rgb(234,21,15)" fg:x="16" fg:w="1"/><text x="59.5093%" y="239.50">rune..</text></g><g><title>runestick::item::ComponentRef::write_component (1 samples, 3.70%)</title><rect x="59.2593%" y="213" width="3.7037%" height="15" fill="rgb(228,52,37)" fg:x="16" fg:w="1"/><text x="59.5093%" y="223.50">rune..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 3.70%)</title><rect x="59.2593%" y="197" width="3.7037%" height="15" fill="rgb(205,13,18)" fg:x="16" fg:w="1"/><text x="59.5093%" y="207.50">allo..</text></g><g><title>runestick::context::Context::runtime (1 samples, 3.70%)</title><rect x="62.9630%" y="261" width="3.7037%" height="15" fill="rgb(210,26,3)" fg:x="17" fg:w="1"/><text x="63.2130%" y="271.50">rune..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 3.70%)</title><rect x="62.9630%" y="245" width="3.7037%" height="15" fill="rgb(243,51,3)" fg:x="17" fg:w="1"/><text x="63.2130%" y="255.50">&lt;has..</text></g><g><title>&lt;source_code_parser::prophet::component::FieldComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (15 samples, 55.56%)</title><rect x="14.8148%" y="309" width="55.5556%" height="15" fill="rgb(232,146,27)" fg:x="4" fg:w="15"/><text x="15.0648%" y="319.50">&lt;source_code_parser::prophet::component::FieldComponent as source_code_parser::ressa::explor..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (15 samples, 55.56%)</title><rect x="14.8148%" y="293" width="55.5556%" height="15" fill="rgb(250,37,45)" fg:x="4" fg:w="15"/><text x="15.0648%" y="303.50">source_code_parser::ressa::node_pattern::ressa_node_parse</text></g><g><title>source_code_parser::ressa::callback::Executor::execute (8 samples, 29.63%)</title><rect x="40.7407%" y="277" width="29.6296%" height="15" fill="rgb(242,116,34)" fg:x="11" fg:w="8"/><text x="40.9907%" y="287.50">source_code_parser::ressa::callback::Executor::e..</text></g><g><title>runestick::vm_execution::VmExecution::complete (1 samples, 3.70%)</title><rect x="66.6667%" y="261" width="3.7037%" height="15" fill="rgb(218,107,32)" fg:x="18" fg:w="1"/><text x="66.9167%" y="271.50">rune..</text></g><g><title>runestick::vm_execution::VmExecution::resume (1 samples, 3.70%)</title><rect x="66.6667%" y="245" width="3.7037%" height="15" fill="rgb(219,156,23)" fg:x="18" fg:w="1"/><text x="66.9167%" y="255.50">rune..</text></g><g><title>core::ptr::drop_in_place&lt;runestick::vm::Vm&gt; (1 samples, 3.70%)</title><rect x="66.6667%" y="229" width="3.7037%" height="15" fill="rgb(212,143,40)" fg:x="18" fg:w="1"/><text x="66.9167%" y="239.50">core..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 3.70%)</title><rect x="66.6667%" y="213" width="3.7037%" height="15" fill="rgb(236,217,11)" fg:x="18" fg:w="1"/><text x="66.9167%" y="223.50">allo..</text></g><g><title>_rjem_je_large_dalloc (1 samples, 3.70%)</title><rect x="66.6667%" y="197" width="3.7037%" height="15" fill="rgb(233,169,22)" fg:x="18" fg:w="1"/><text x="66.9167%" y="207.50">_rje..</text></g><g><title>large_dalloc_finish_impl (1 samples, 3.70%)</title><rect x="66.6667%" y="181" width="3.7037%" height="15" fill="rgb(238,93,48)" fg:x="18" fg:w="1"/><text x="66.9167%" y="191.50">larg..</text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (1 samples, 3.70%)</title><rect x="66.6667%" y="165" width="3.7037%" height="15" fill="rgb(229,108,20)" fg:x="18" fg:w="1"/><text x="66.9167%" y="175.50">_rje..</text></g><g><title>extent_record (1 samples, 3.70%)</title><rect x="66.6667%" y="149" width="3.7037%" height="15" fill="rgb(224,61,24)" fg:x="18" fg:w="1"/><text x="66.9167%" y="159.50">exte..</text></g><g><title>extent_try_coalesce (1 samples, 3.70%)</title><rect x="66.6667%" y="133" width="3.7037%" height="15" fill="rgb(246,75,42)" fg:x="18" fg:w="1"/><text x="66.9167%" y="143.50">exte..</text></g><g><title>extent_coalesce (1 samples, 3.70%)</title><rect x="66.6667%" y="117" width="3.7037%" height="15" fill="rgb(254,24,51)" fg:x="18" fg:w="1"/><text x="66.9167%" y="127.50">exte..</text></g><g><title>extent_activate_locked (1 samples, 3.70%)</title><rect x="66.6667%" y="101" width="3.7037%" height="15" fill="rgb(209,41,0)" fg:x="18" fg:w="1"/><text x="66.9167%" y="111.50">exte..</text></g><g><title>extents_remove_locked (1 samples, 3.70%)</title><rect x="66.6667%" y="85" width="3.7037%" height="15" fill="rgb(224,150,0)" fg:x="18" fg:w="1"/><text x="66.9167%" y="95.50">exte..</text></g><g><title>_rjem_je_extent_heap_remove (1 samples, 3.70%)</title><rect x="66.6667%" y="69" width="3.7037%" height="15" fill="rgb(220,77,45)" fg:x="18" fg:w="1"/><text x="66.9167%" y="79.50">_rje..</text></g><g><title>&lt;source_code_parser::prophet::component::MethodComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (1 samples, 3.70%)</title><rect x="70.3704%" y="309" width="3.7037%" height="15" fill="rgb(230,44,34)" fg:x="19" fg:w="1"/><text x="70.6204%" y="319.50">&lt;sou..</text></g><g><title>&lt;source_code_parser::prophet::component::MethodParamComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (1 samples, 3.70%)</title><rect x="70.3704%" y="293" width="3.7037%" height="15" fill="rgb(205,216,43)" fg:x="19" fg:w="1"/><text x="70.6204%" y="303.50">&lt;sou..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (1 samples, 3.70%)</title><rect x="70.3704%" y="277" width="3.7037%" height="15" fill="rgb(221,206,14)" fg:x="19" fg:w="1"/><text x="70.6204%" y="287.50">sour..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 3.70%)</title><rect x="70.3704%" y="261" width="3.7037%" height="15" fill="rgb(217,105,24)" fg:x="19" fg:w="1"/><text x="70.6204%" y="271.50">&lt;has..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 3.70%)</title><rect x="70.3704%" y="245" width="3.7037%" height="15" fill="rgb(237,32,13)" fg:x="19" fg:w="1"/><text x="70.6204%" y="255.50">&lt;has..</text></g><g><title>_rjem_sdallocx (1 samples, 3.70%)</title><rect x="70.3704%" y="229" width="3.7037%" height="15" fill="rgb(217,174,1)" fg:x="19" fg:w="1"/><text x="70.6204%" y="239.50">_rje..</text></g><g><title>_start (22 samples, 81.48%)</title><rect x="0.0000%" y="709" width="81.4815%" height="15" fill="rgb(230,214,47)" fg:x="0" fg:w="22"/><text x="0.2500%" y="719.50">_start</text></g><g><title>__libc_start_main (22 samples, 81.48%)</title><rect x="0.0000%" y="693" width="81.4815%" height="15" fill="rgb(211,54,48)" fg:x="0" fg:w="22"/><text x="0.2500%" y="703.50">__libc_start_main</text></g><g><title>main (22 samples, 81.48%)</title><rect x="0.0000%" y="677" width="81.4815%" height="15" fill="rgb(217,5,6)" fg:x="0" fg:w="22"/><text x="0.2500%" y="687.50">main</text></g><g><title>std::rt::lang_start_internal (22 samples, 81.48%)</title><rect x="0.0000%" y="661" width="81.4815%" height="15" fill="rgb(227,72,27)" fg:x="0" fg:w="22"/><text x="0.2500%" y="671.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (22 samples, 81.48%)</title><rect x="0.0000%" y="645" width="81.4815%" height="15" fill="rgb(245,144,22)" fg:x="0" fg:w="22"/><text x="0.2500%" y="655.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (22 samples, 81.48%)</title><rect x="0.0000%" y="629" width="81.4815%" height="15" fill="rgb(229,102,16)" fg:x="0" fg:w="22"/><text x="0.2500%" y="639.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (22 samples, 81.48%)</title><rect x="0.0000%" y="613" width="81.4815%" height="15" fill="rgb(246,4,12)" fg:x="0" fg:w="22"/><text x="0.2500%" y="623.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (22 samples, 81.48%)</title><rect x="0.0000%" y="597" width="81.4815%" height="15" fill="rgb(252,115,21)" fg:x="0" fg:w="22"/><text x="0.2500%" y="607.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (22 samples, 81.48%)</title><rect x="0.0000%" y="581" width="81.4815%" height="15" fill="rgb(218,90,23)" fg:x="0" fg:w="22"/><text x="0.2500%" y="591.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (22 samples, 81.48%)</title><rect x="0.0000%" y="565" width="81.4815%" height="15" fill="rgb(207,54,42)" fg:x="0" fg:w="22"/><text x="0.2500%" y="575.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (22 samples, 81.48%)</title><rect x="0.0000%" y="549" width="81.4815%" height="15" fill="rgb(220,110,27)" fg:x="0" fg:w="22"/><text x="0.2500%" y="559.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (22 samples, 81.48%)</title><rect x="0.0000%" y="533" width="81.4815%" height="15" fill="rgb(209,102,0)" fg:x="0" fg:w="22"/><text x="0.2500%" y="543.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (22 samples, 81.48%)</title><rect x="0.0000%" y="517" width="81.4815%" height="15" fill="rgb(240,172,39)" fg:x="0" fg:w="22"/><text x="0.2500%" y="527.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (22 samples, 81.48%)</title><rect x="0.0000%" y="501" width="81.4815%" height="15" fill="rgb(238,12,22)" fg:x="0" fg:w="22"/><text x="0.2500%" y="511.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>ressa_mem_bench::main (22 samples, 81.48%)</title><rect x="0.0000%" y="485" width="81.4815%" height="15" fill="rgb(232,212,36)" fg:x="0" fg:w="22"/><text x="0.2500%" y="495.50">ressa_mem_bench::main</text></g><g><title>ressa_mem_bench::ressa_benchmark (22 samples, 81.48%)</title><rect x="0.0000%" y="469" width="81.4815%" height="15" fill="rgb(248,216,3)" fg:x="0" fg:w="22"/><text x="0.2500%" y="479.50">ressa_mem_bench::ressa_benchmark</text></g><g><title>criterion::Criterion&lt;M&gt;::bench_function (22 samples, 81.48%)</title><rect x="0.0000%" y="453" width="81.4815%" height="15" fill="rgb(236,210,31)" fg:x="0" fg:w="22"/><text x="0.2500%" y="463.50">criterion::Criterion&lt;M&gt;::bench_function</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (22 samples, 81.48%)</title><rect x="0.0000%" y="437" width="81.4815%" height="15" fill="rgb(250,33,51)" fg:x="0" fg:w="22"/><text x="0.2500%" y="447.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::analysis::common (22 samples, 81.48%)</title><rect x="0.0000%" y="421" width="81.4815%" height="15" fill="rgb(230,125,43)" fg:x="0" fg:w="22"/><text x="0.2500%" y="431.50">criterion::analysis::common</text></g><g><title>criterion::routine::Routine::sample (22 samples, 81.48%)</title><rect x="0.0000%" y="405" width="81.4815%" height="15" fill="rgb(223,68,3)" fg:x="0" fg:w="22"/><text x="0.2500%" y="415.50">criterion::routine::Routine::sample</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 81.48%)</title><rect x="0.0000%" y="389" width="81.4815%" height="15" fill="rgb(228,99,1)" fg:x="0" fg:w="22"/><text x="0.2500%" y="399.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>source_code_parser::ressa::run_ressa_parse (21 samples, 77.78%)</title><rect x="3.7037%" y="373" width="77.7778%" height="15" fill="rgb(234,34,0)" fg:x="1" fg:w="21"/><text x="3.9537%" y="383.50">source_code_parser::ressa::run_ressa_parse</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (21 samples, 77.78%)</title><rect x="3.7037%" y="357" width="77.7778%" height="15" fill="rgb(248,68,15)" fg:x="1" fg:w="21"/><text x="3.9537%" y="367.50">&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::ex..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (21 samples, 77.78%)</title><rect x="3.7037%" y="341" width="77.7778%" height="15" fill="rgb(222,211,24)" fg:x="1" fg:w="21"/><text x="3.9537%" y="351.50">source_code_parser::ressa::node_pattern::ressa_node_parse</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::pattern_parser::NodePatternParser&gt;::parse (18 samples, 66.67%)</title><rect x="14.8148%" y="325" width="66.6667%" height="15" fill="rgb(231,202,0)" fg:x="4" fg:w="18"/><text x="15.0648%" y="335.50">&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::pattern_parse..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (2 samples, 7.41%)</title><rect x="74.0741%" y="309" width="7.4074%" height="15" fill="rgb(237,182,35)" fg:x="20" fg:w="2"/><text x="74.3241%" y="319.50">source_cod..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 7.41%)</title><rect x="74.0741%" y="293" width="7.4074%" height="15" fill="rgb(229,98,18)" fg:x="20" fg:w="2"/><text x="74.3241%" y="303.50">&lt;hashbrown..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 7.41%)</title><rect x="74.0741%" y="277" width="7.4074%" height="15" fill="rgb(209,111,35)" fg:x="20" fg:w="2"/><text x="74.3241%" y="287.50">&lt;hashbrown..</text></g><g><title>_rjem_sdallocx (1 samples, 3.70%)</title><rect x="77.7778%" y="261" width="3.7037%" height="15" fill="rgb(219,150,33)" fg:x="21" fg:w="1"/><text x="78.0278%" y="271.50">_rje..</text></g><g><title>isfree (1 samples, 3.70%)</title><rect x="77.7778%" y="245" width="3.7037%" height="15" fill="rgb(229,187,26)" fg:x="21" fg:w="1"/><text x="78.0278%" y="255.50">isfr..</text></g><g><title>isdalloct (1 samples, 3.70%)</title><rect x="77.7778%" y="229" width="3.7037%" height="15" fill="rgb(252,134,20)" fg:x="21" fg:w="1"/><text x="78.0278%" y="239.50">isda..</text></g><g><title>arena_sdalloc (1 samples, 3.70%)</title><rect x="77.7778%" y="213" width="3.7037%" height="15" fill="rgb(241,49,16)" fg:x="21" fg:w="1"/><text x="78.0278%" y="223.50">aren..</text></g><g><title>tcache_dalloc_small (1 samples, 3.70%)</title><rect x="77.7778%" y="197" width="3.7037%" height="15" fill="rgb(249,155,24)" fg:x="21" fg:w="1"/><text x="78.0278%" y="207.50">tcac..</text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 3.70%)</title><rect x="77.7778%" y="181" width="3.7037%" height="15" fill="rgb(241,219,38)" fg:x="21" fg:w="1"/><text x="78.0278%" y="191.50">_rje..</text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 3.70%)</title><rect x="77.7778%" y="165" width="3.7037%" height="15" fill="rgb(241,116,17)" fg:x="21" fg:w="1"/><text x="78.0278%" y="175.50">_rje..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1 samples, 3.70%)</title><rect x="81.4815%" y="709" width="3.7037%" height="15" fill="rgb(225,192,13)" fg:x="22" fg:w="1"/><text x="81.7315%" y="719.50">crit..</text></g><g><title>criterion::analysis::common (1 samples, 3.70%)</title><rect x="81.4815%" y="693" width="3.7037%" height="15" fill="rgb(207,155,46)" fg:x="22" fg:w="1"/><text x="81.7315%" y="703.50">crit..</text></g><g><title>criterion::routine::Routine::sample (1 samples, 3.70%)</title><rect x="81.4815%" y="677" width="3.7037%" height="15" fill="rgb(248,9,18)" fg:x="22" fg:w="1"/><text x="81.7315%" y="687.50">crit..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 3.70%)</title><rect x="81.4815%" y="661" width="3.7037%" height="15" fill="rgb(227,94,49)" fg:x="22" fg:w="1"/><text x="81.7315%" y="671.50">&lt;cor..</text></g><g><title>source_code_parser::ressa::run_ressa_parse (1 samples, 3.70%)</title><rect x="81.4815%" y="645" width="3.7037%" height="15" fill="rgb(238,98,23)" fg:x="22" fg:w="1"/><text x="81.7315%" y="655.50">sour..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (1 samples, 3.70%)</title><rect x="81.4815%" y="629" width="3.7037%" height="15" fill="rgb(219,90,53)" fg:x="22" fg:w="1"/><text x="81.7315%" y="639.50">&lt;sou..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (1 samples, 3.70%)</title><rect x="81.4815%" y="613" width="3.7037%" height="15" fill="rgb(206,227,30)" fg:x="22" fg:w="1"/><text x="81.7315%" y="623.50">sour..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::pattern_parser::NodePatternParser&gt;::parse (1 samples, 3.70%)</title><rect x="81.4815%" y="597" width="3.7037%" height="15" fill="rgb(218,9,53)" fg:x="22" fg:w="1"/><text x="81.7315%" y="607.50">&lt;sou..</text></g><g><title>&lt;source_code_parser::prophet::component::FieldComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (1 samples, 3.70%)</title><rect x="81.4815%" y="581" width="3.7037%" height="15" fill="rgb(251,93,12)" fg:x="22" fg:w="1"/><text x="81.7315%" y="591.50">&lt;sou..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (1 samples, 3.70%)</title><rect x="81.4815%" y="565" width="3.7037%" height="15" fill="rgb(230,206,27)" fg:x="22" fg:w="1"/><text x="81.7315%" y="575.50">sour..</text></g><g><title>source_code_parser::ressa::callback::Executor::execute (1 samples, 3.70%)</title><rect x="81.4815%" y="549" width="3.7037%" height="15" fill="rgb(226,208,40)" fg:x="22" fg:w="1"/><text x="81.7315%" y="559.50">sour..</text></g><g><title>rune::load::load_sources (1 samples, 3.70%)</title><rect x="81.4815%" y="533" width="3.7037%" height="15" fill="rgb(231,127,36)" fg:x="22" fg:w="1"/><text x="81.7315%" y="543.50">rune..</text></g><g><title>rune::load::load_sources_with_visitor (1 samples, 3.70%)</title><rect x="81.4815%" y="517" width="3.7037%" height="15" fill="rgb(219,94,38)" fg:x="22" fg:w="1"/><text x="81.7315%" y="527.50">rune..</text></g><g><title>rune::compiling::compile_with_options (1 samples, 3.70%)</title><rect x="81.4815%" y="501" width="3.7037%" height="15" fill="rgb(209,77,10)" fg:x="22" fg:w="1"/><text x="81.7315%" y="511.50">rune..</text></g><g><title>rune::worker::Worker::run (1 samples, 3.70%)</title><rect x="81.4815%" y="485" width="3.7037%" height="15" fill="rgb(252,170,12)" fg:x="22" fg:w="1"/><text x="81.7315%" y="495.50">rune..</text></g><g><title>&lt;rune::ast::file::File as rune::indexing::index::Index&gt;::index (1 samples, 3.70%)</title><rect x="81.4815%" y="469" width="3.7037%" height="15" fill="rgb(246,181,6)" fg:x="22" fg:w="1"/><text x="81.7315%" y="479.50">&lt;run..</text></g><g><title>&lt;rune::ast::item::Item as rune::indexing::index::Index&gt;::index (1 samples, 3.70%)</title><rect x="81.4815%" y="453" width="3.7037%" height="15" fill="rgb(228,193,1)" fg:x="22" fg:w="1"/><text x="81.7315%" y="463.50">&lt;run..</text></g><g><title>&lt;rune::ast::item_fn::ItemFn as rune::indexing::index::Index&gt;::index (1 samples, 3.70%)</title><rect x="81.4815%" y="437" width="3.7037%" height="15" fill="rgb(226,100,17)" fg:x="22" fg:w="1"/><text x="81.7315%" y="447.50">&lt;run..</text></g><g><title>&lt;rune::ast::block::Block as rune::indexing::index::Index&gt;::index (1 samples, 3.70%)</title><rect x="81.4815%" y="421" width="3.7037%" height="15" fill="rgb(249,175,47)" fg:x="22" fg:w="1"/><text x="81.7315%" y="431.50">&lt;run..</text></g><g><title>&lt;rune::ast::local::Local as rune::indexing::index::Index&gt;::index (1 samples, 3.70%)</title><rect x="81.4815%" y="405" width="3.7037%" height="15" fill="rgb(215,123,0)" fg:x="22" fg:w="1"/><text x="81.7315%" y="415.50">&lt;run..</text></g><g><title>&lt;rune::ast::expr::Expr as rune::indexing::index::Index&gt;::index (1 samples, 3.70%)</title><rect x="81.4815%" y="389" width="3.7037%" height="15" fill="rgb(235,164,39)" fg:x="22" fg:w="1"/><text x="81.7315%" y="399.50">&lt;run..</text></g><g><title>&lt;rune::ast::expr_call::ExprCall as rune::indexing::index::Index&gt;::index (1 samples, 3.70%)</title><rect x="81.4815%" y="373" width="3.7037%" height="15" fill="rgb(217,168,45)" fg:x="22" fg:w="1"/><text x="81.7315%" y="383.50">&lt;run..</text></g><g><title>&lt;rune::ast::expr::Expr as rune::indexing::index::Index&gt;::index (1 samples, 3.70%)</title><rect x="81.4815%" y="357" width="3.7037%" height="15" fill="rgb(224,208,14)" fg:x="22" fg:w="1"/><text x="81.7315%" y="367.50">&lt;run..</text></g><g><title>&lt;rune::ast::expr_field_access::ExprFieldAccess as rune::indexing::index::Index&gt;::index (1 samples, 3.70%)</title><rect x="81.4815%" y="341" width="3.7037%" height="15" fill="rgb(251,58,35)" fg:x="22" fg:w="1"/><text x="81.7315%" y="351.50">&lt;run..</text></g><g><title>&lt;rune::ast::expr::Expr as rune::indexing::index::Index&gt;::index (1 samples, 3.70%)</title><rect x="81.4815%" y="325" width="3.7037%" height="15" fill="rgb(248,17,31)" fg:x="22" fg:w="1"/><text x="81.7315%" y="335.50">&lt;run..</text></g><g><title>&lt;rune::ast::expr::Expr as rune::spanned::Spanned&gt;::span (1 samples, 3.70%)</title><rect x="81.4815%" y="309" width="3.7037%" height="15" fill="rgb(211,69,35)" fg:x="22" fg:w="1"/><text x="81.7315%" y="319.50">&lt;run..</text></g><g><title>&lt;rune::ast::expr::Expr as rune::spanned::Spanned&gt;::span (1 samples, 3.70%)</title><rect x="81.4815%" y="293" width="3.7037%" height="15" fill="rgb(224,81,50)" fg:x="22" fg:w="1"/><text x="81.7315%" y="303.50">&lt;run..</text></g><g><title>&lt;rune::ast::expr_field_access::ExprFieldAccess as rune::spanned::Spanned&gt;::span (1 samples, 3.70%)</title><rect x="81.4815%" y="277" width="3.7037%" height="15" fill="rgb(211,54,35)" fg:x="22" fg:w="1"/><text x="81.7315%" y="287.50">&lt;run..</text></g><g><title>&lt;rune::ast::expr::Expr as rune::spanned::Spanned&gt;::span (1 samples, 3.70%)</title><rect x="81.4815%" y="261" width="3.7037%" height="15" fill="rgb(221,34,52)" fg:x="22" fg:w="1"/><text x="81.7315%" y="271.50">&lt;run..</text></g><g><title>&lt;rune::ast::path::Path as rune::spanned::Spanned&gt;::span (1 samples, 3.70%)</title><rect x="81.4815%" y="245" width="3.7037%" height="15" fill="rgb(251,111,35)" fg:x="22" fg:w="1"/><text x="81.7315%" y="255.50">&lt;run..</text></g><g><title>main (1 samples, 3.70%)</title><rect x="85.1852%" y="709" width="3.7037%" height="15" fill="rgb(233,218,50)" fg:x="23" fg:w="1"/><text x="85.4352%" y="719.50">main</text></g><g><title>std::rt::lang_start_internal (1 samples, 3.70%)</title><rect x="85.1852%" y="693" width="3.7037%" height="15" fill="rgb(207,30,10)" fg:x="23" fg:w="1"/><text x="85.4352%" y="703.50">std:..</text></g><g><title>std::panic::catch_unwind (1 samples, 3.70%)</title><rect x="85.1852%" y="677" width="3.7037%" height="15" fill="rgb(243,54,51)" fg:x="23" fg:w="1"/><text x="85.4352%" y="687.50">std:..</text></g><g><title>std::panicking::try (1 samples, 3.70%)</title><rect x="85.1852%" y="661" width="3.7037%" height="15" fill="rgb(240,123,7)" fg:x="23" fg:w="1"/><text x="85.4352%" y="671.50">std:..</text></g><g><title>std::panicking::try::do_call (1 samples, 3.70%)</title><rect x="85.1852%" y="645" width="3.7037%" height="15" fill="rgb(242,39,19)" fg:x="23" fg:w="1"/><text x="85.4352%" y="655.50">std:..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 3.70%)</title><rect x="85.1852%" y="629" width="3.7037%" height="15" fill="rgb(229,215,13)" fg:x="23" fg:w="1"/><text x="85.4352%" y="639.50">std:..</text></g><g><title>std::panic::catch_unwind (1 samples, 3.70%)</title><rect x="85.1852%" y="613" width="3.7037%" height="15" fill="rgb(211,77,24)" fg:x="23" fg:w="1"/><text x="85.4352%" y="623.50">std:..</text></g><g><title>std::panicking::try (1 samples, 3.70%)</title><rect x="85.1852%" y="597" width="3.7037%" height="15" fill="rgb(250,106,43)" fg:x="23" fg:w="1"/><text x="85.4352%" y="607.50">std:..</text></g><g><title>std::panicking::try::do_call (1 samples, 3.70%)</title><rect x="85.1852%" y="581" width="3.7037%" height="15" fill="rgb(221,160,20)" fg:x="23" fg:w="1"/><text x="85.4352%" y="591.50">std:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 3.70%)</title><rect x="85.1852%" y="565" width="3.7037%" height="15" fill="rgb(226,173,34)" fg:x="23" fg:w="1"/><text x="85.4352%" y="575.50">core..</text></g><g><title>std::rt::lang_start::{{closure}} (1 samples, 3.70%)</title><rect x="85.1852%" y="549" width="3.7037%" height="15" fill="rgb(251,33,53)" fg:x="23" fg:w="1"/><text x="85.4352%" y="559.50">std:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 3.70%)</title><rect x="85.1852%" y="533" width="3.7037%" height="15" fill="rgb(241,21,35)" fg:x="23" fg:w="1"/><text x="85.4352%" y="543.50">std:..</text></g><g><title>ressa_mem_bench::main (1 samples, 3.70%)</title><rect x="85.1852%" y="517" width="3.7037%" height="15" fill="rgb(206,162,47)" fg:x="23" fg:w="1"/><text x="85.4352%" y="527.50">ress..</text></g><g><title>ressa_mem_bench::ressa_benchmark (1 samples, 3.70%)</title><rect x="85.1852%" y="501" width="3.7037%" height="15" fill="rgb(229,82,14)" fg:x="23" fg:w="1"/><text x="85.4352%" y="511.50">ress..</text></g><g><title>criterion::Criterion&lt;M&gt;::bench_function (1 samples, 3.70%)</title><rect x="85.1852%" y="485" width="3.7037%" height="15" fill="rgb(213,217,21)" fg:x="23" fg:w="1"/><text x="85.4352%" y="495.50">crit..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1 samples, 3.70%)</title><rect x="85.1852%" y="469" width="3.7037%" height="15" fill="rgb(226,120,17)" fg:x="23" fg:w="1"/><text x="85.4352%" y="479.50">crit..</text></g><g><title>criterion::analysis::common (1 samples, 3.70%)</title><rect x="85.1852%" y="453" width="3.7037%" height="15" fill="rgb(208,111,48)" fg:x="23" fg:w="1"/><text x="85.4352%" y="463.50">crit..</text></g><g><title>criterion::routine::Routine::sample (1 samples, 3.70%)</title><rect x="85.1852%" y="437" width="3.7037%" height="15" fill="rgb(210,60,13)" fg:x="23" fg:w="1"/><text x="85.4352%" y="447.50">crit..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 3.70%)</title><rect x="85.1852%" y="421" width="3.7037%" height="15" fill="rgb(246,73,18)" fg:x="23" fg:w="1"/><text x="85.4352%" y="431.50">&lt;cor..</text></g><g><title>source_code_parser::ressa::run_ressa_parse (1 samples, 3.70%)</title><rect x="85.1852%" y="405" width="3.7037%" height="15" fill="rgb(211,191,20)" fg:x="23" fg:w="1"/><text x="85.4352%" y="415.50">sour..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (1 samples, 3.70%)</title><rect x="85.1852%" y="389" width="3.7037%" height="15" fill="rgb(243,151,21)" fg:x="23" fg:w="1"/><text x="85.4352%" y="399.50">&lt;sou..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (1 samples, 3.70%)</title><rect x="85.1852%" y="373" width="3.7037%" height="15" fill="rgb(223,171,9)" fg:x="23" fg:w="1"/><text x="85.4352%" y="383.50">sour..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::pattern_parser::NodePatternParser&gt;::parse (1 samples, 3.70%)</title><rect x="85.1852%" y="357" width="3.7037%" height="15" fill="rgb(219,222,49)" fg:x="23" fg:w="1"/><text x="85.4352%" y="367.50">&lt;sou..</text></g><g><title>&lt;source_code_parser::prophet::component::FieldComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (1 samples, 3.70%)</title><rect x="85.1852%" y="341" width="3.7037%" height="15" fill="rgb(236,130,18)" fg:x="23" fg:w="1"/><text x="85.4352%" y="351.50">&lt;sou..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (1 samples, 3.70%)</title><rect x="85.1852%" y="325" width="3.7037%" height="15" fill="rgb(248,180,49)" fg:x="23" fg:w="1"/><text x="85.4352%" y="335.50">sour..</text></g><g><title>source_code_parser::ressa::callback::Executor::execute (1 samples, 3.70%)</title><rect x="85.1852%" y="309" width="3.7037%" height="15" fill="rgb(246,192,14)" fg:x="23" fg:w="1"/><text x="85.4352%" y="319.50">sour..</text></g><g><title>rune::load::load_sources (1 samples, 3.70%)</title><rect x="85.1852%" y="293" width="3.7037%" height="15" fill="rgb(240,206,28)" fg:x="23" fg:w="1"/><text x="85.4352%" y="303.50">rune..</text></g><g><title>rune::load::load_sources_with_visitor (1 samples, 3.70%)</title><rect x="85.1852%" y="277" width="3.7037%" height="15" fill="rgb(242,183,51)" fg:x="23" fg:w="1"/><text x="85.4352%" y="287.50">rune..</text></g><g><title>rune::compiling::compile_with_options (1 samples, 3.70%)</title><rect x="85.1852%" y="261" width="3.7037%" height="15" fill="rgb(254,114,31)" fg:x="23" fg:w="1"/><text x="85.4352%" y="271.50">rune..</text></g><g><title>rune::compiling::v1::assemble::item_fn::&lt;impl rune::compiling::v1::assemble::AssembleFn for rune::ast::item_fn::ItemFn&gt;::assemble_fn (1 samples, 3.70%)</title><rect x="85.1852%" y="245" width="3.7037%" height="15" fill="rgb(226,76,42)" fg:x="23" fg:w="1"/><text x="85.4352%" y="255.50">rune..</text></g><g><title>rune::compiling::v1::assemble::block::&lt;impl rune::compiling::v1::assemble::Assemble for rune::ast::block::Block&gt;::assemble (1 samples, 3.70%)</title><rect x="85.1852%" y="229" width="3.7037%" height="15" fill="rgb(248,56,14)" fg:x="23" fg:w="1"/><text x="85.4352%" y="239.50">rune..</text></g><g><title>rune::compiling::v1::assemble::expr::&lt;impl rune::compiling::v1::assemble::Assemble for rune::ast::expr::Expr&gt;::assemble (1 samples, 3.70%)</title><rect x="85.1852%" y="213" width="3.7037%" height="15" fill="rgb(222,110,10)" fg:x="23" fg:w="1"/><text x="85.4352%" y="223.50">rune..</text></g><g><title>rune::compiling::v1::assemble::expr_call::&lt;impl rune::compiling::v1::assemble::Assemble for rune::ast::expr_call::ExprCall&gt;::assemble (1 samples, 3.70%)</title><rect x="85.1852%" y="197" width="3.7037%" height="15" fill="rgb(246,76,12)" fg:x="23" fg:w="1"/><text x="85.4352%" y="207.50">rune..</text></g><g><title>&lt;rune::ast::expr::Expr as rune::spanned::Spanned&gt;::span (1 samples, 3.70%)</title><rect x="85.1852%" y="181" width="3.7037%" height="15" fill="rgb(224,205,34)" fg:x="23" fg:w="1"/><text x="85.4352%" y="191.50">&lt;run..</text></g><g><title>&lt;rune::ast::expr_field_access::ExprFieldAccess as rune::spanned::Spanned&gt;::span (1 samples, 3.70%)</title><rect x="85.1852%" y="165" width="3.7037%" height="15" fill="rgb(224,66,45)" fg:x="23" fg:w="1"/><text x="85.4352%" y="175.50">&lt;run..</text></g><g><title>&lt;rune::ast::expr::Expr as rune::spanned::Spanned&gt;::span (1 samples, 3.70%)</title><rect x="85.1852%" y="149" width="3.7037%" height="15" fill="rgb(243,166,16)" fg:x="23" fg:w="1"/><text x="85.4352%" y="159.50">&lt;run..</text></g><g><title>&lt;rune::ast::path::Path as rune::spanned::Spanned&gt;::span (1 samples, 3.70%)</title><rect x="85.1852%" y="133" width="3.7037%" height="15" fill="rgb(241,200,20)" fg:x="23" fg:w="1"/><text x="85.4352%" y="143.50">&lt;run..</text></g><g><title>&lt;rune::ast::path::PathSegment as rune::spanned::Spanned&gt;::span (1 samples, 3.70%)</title><rect x="85.1852%" y="117" width="3.7037%" height="15" fill="rgb(210,23,24)" fg:x="23" fg:w="1"/><text x="85.4352%" y="127.50">&lt;run..</text></g><g><title>ressa_mem_bench::ressa_benchmark (1 samples, 3.70%)</title><rect x="88.8889%" y="709" width="3.7037%" height="15" fill="rgb(239,212,1)" fg:x="24" fg:w="1"/><text x="89.1389%" y="719.50">ress..</text></g><g><title>criterion::Criterion&lt;M&gt;::bench_function (1 samples, 3.70%)</title><rect x="88.8889%" y="693" width="3.7037%" height="15" fill="rgb(248,3,9)" fg:x="24" fg:w="1"/><text x="89.1389%" y="703.50">crit..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1 samples, 3.70%)</title><rect x="88.8889%" y="677" width="3.7037%" height="15" fill="rgb(215,168,15)" fg:x="24" fg:w="1"/><text x="89.1389%" y="687.50">crit..</text></g><g><title>criterion::analysis::common (1 samples, 3.70%)</title><rect x="88.8889%" y="661" width="3.7037%" height="15" fill="rgb(246,105,15)" fg:x="24" fg:w="1"/><text x="89.1389%" y="671.50">crit..</text></g><g><title>criterion::routine::Routine::sample (1 samples, 3.70%)</title><rect x="88.8889%" y="645" width="3.7037%" height="15" fill="rgb(229,164,53)" fg:x="24" fg:w="1"/><text x="89.1389%" y="655.50">crit..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 3.70%)</title><rect x="88.8889%" y="629" width="3.7037%" height="15" fill="rgb(205,207,12)" fg:x="24" fg:w="1"/><text x="89.1389%" y="639.50">&lt;cor..</text></g><g><title>source_code_parser::ressa::run_ressa_parse (1 samples, 3.70%)</title><rect x="88.8889%" y="613" width="3.7037%" height="15" fill="rgb(243,20,9)" fg:x="24" fg:w="1"/><text x="89.1389%" y="623.50">sour..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (1 samples, 3.70%)</title><rect x="88.8889%" y="597" width="3.7037%" height="15" fill="rgb(250,48,14)" fg:x="24" fg:w="1"/><text x="89.1389%" y="607.50">&lt;sou..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (1 samples, 3.70%)</title><rect x="88.8889%" y="581" width="3.7037%" height="15" fill="rgb(230,170,23)" fg:x="24" fg:w="1"/><text x="89.1389%" y="591.50">sour..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::pattern_parser::NodePatternParser&gt;::parse (1 samples, 3.70%)</title><rect x="88.8889%" y="565" width="3.7037%" height="15" fill="rgb(250,92,14)" fg:x="24" fg:w="1"/><text x="89.1389%" y="575.50">&lt;sou..</text></g><g><title>&lt;source_code_parser::prophet::component::FieldComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (1 samples, 3.70%)</title><rect x="88.8889%" y="549" width="3.7037%" height="15" fill="rgb(210,190,16)" fg:x="24" fg:w="1"/><text x="89.1389%" y="559.50">&lt;sou..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (1 samples, 3.70%)</title><rect x="88.8889%" y="533" width="3.7037%" height="15" fill="rgb(254,219,18)" fg:x="24" fg:w="1"/><text x="89.1389%" y="543.50">sour..</text></g><g><title>source_code_parser::ressa::callback::Executor::execute (1 samples, 3.70%)</title><rect x="88.8889%" y="517" width="3.7037%" height="15" fill="rgb(215,144,29)" fg:x="24" fg:w="1"/><text x="89.1389%" y="527.50">sour..</text></g><g><title>rune::load::load_sources (1 samples, 3.70%)</title><rect x="88.8889%" y="501" width="3.7037%" height="15" fill="rgb(232,166,7)" fg:x="24" fg:w="1"/><text x="89.1389%" y="511.50">rune..</text></g><g><title>rune::load::load_sources_with_visitor (1 samples, 3.70%)</title><rect x="88.8889%" y="485" width="3.7037%" height="15" fill="rgb(218,126,10)" fg:x="24" fg:w="1"/><text x="89.1389%" y="495.50">rune..</text></g><g><title>rune::compiling::compile_with_options (1 samples, 3.70%)</title><rect x="88.8889%" y="469" width="3.7037%" height="15" fill="rgb(222,194,45)" fg:x="24" fg:w="1"/><text x="89.1389%" y="479.50">rune..</text></g><g><title>rune::worker::Worker::run (1 samples, 3.70%)</title><rect x="88.8889%" y="453" width="3.7037%" height="15" fill="rgb(217,178,10)" fg:x="24" fg:w="1"/><text x="89.1389%" y="463.50">rune..</text></g><g><title>rune::parse_all (1 samples, 3.70%)</title><rect x="88.8889%" y="437" width="3.7037%" height="15" fill="rgb(205,185,43)" fg:x="24" fg:w="1"/><text x="89.1389%" y="447.50">rune..</text></g><g><title>&lt;rune::ast::file::File as rune::parsing::parse::Parse&gt;::parse (1 samples, 3.70%)</title><rect x="88.8889%" y="421" width="3.7037%" height="15" fill="rgb(215,45,52)" fg:x="24" fg:w="1"/><text x="89.1389%" y="431.50">&lt;run..</text></g><g><title>rune::ast::item::Item::parse_with_meta_path (1 samples, 3.70%)</title><rect x="88.8889%" y="405" width="3.7037%" height="15" fill="rgb(233,124,41)" fg:x="24" fg:w="1"/><text x="89.1389%" y="415.50">rune..</text></g><g><title>rune::ast::item_fn::ItemFn::parse_with_meta (1 samples, 3.70%)</title><rect x="88.8889%" y="389" width="3.7037%" height="15" fill="rgb(233,10,35)" fg:x="24" fg:w="1"/><text x="89.1389%" y="399.50">rune..</text></g><g><title>&lt;rune::ast::block::Block as rune::parsing::parse::Parse&gt;::parse (1 samples, 3.70%)</title><rect x="88.8889%" y="373" width="3.7037%" height="15" fill="rgb(230,226,54)" fg:x="24" fg:w="1"/><text x="89.1389%" y="383.50">&lt;run..</text></g><g><title>&lt;rune::ast::stmt::Stmt as rune::parsing::parse::Parse&gt;::parse (1 samples, 3.70%)</title><rect x="88.8889%" y="357" width="3.7037%" height="15" fill="rgb(234,4,52)" fg:x="24" fg:w="1"/><text x="89.1389%" y="367.50">&lt;run..</text></g><g><title>rune::ast::expr::Expr::parse_with_meta (1 samples, 3.70%)</title><rect x="88.8889%" y="341" width="3.7037%" height="15" fill="rgb(214,133,49)" fg:x="24" fg:w="1"/><text x="89.1389%" y="351.50">rune..</text></g><g><title>rune::ast::expr::Expr::parse_chain (1 samples, 3.70%)</title><rect x="88.8889%" y="325" width="3.7037%" height="15" fill="rgb(213,229,52)" fg:x="24" fg:w="1"/><text x="89.1389%" y="335.50">rune..</text></g><g><title>&lt;rune::ast::grouped::Parenthesized&lt;T,S&gt; as rune::parsing::parse::Parse&gt;::parse (1 samples, 3.70%)</title><rect x="88.8889%" y="309" width="3.7037%" height="15" fill="rgb(235,158,53)" fg:x="24" fg:w="1"/><text x="89.1389%" y="319.50">&lt;run..</text></g><g><title>rune::ast::expr::Expr::parse_with (1 samples, 3.70%)</title><rect x="88.8889%" y="293" width="3.7037%" height="15" fill="rgb(224,167,49)" fg:x="24" fg:w="1"/><text x="89.1389%" y="303.50">rune..</text></g><g><title>rune::ast::expr::Expr::parse_base (1 samples, 3.70%)</title><rect x="88.8889%" y="277" width="3.7037%" height="15" fill="rgb(252,135,45)" fg:x="24" fg:w="1"/><text x="89.1389%" y="287.50">rune..</text></g><g><title>rune::ast::expr::Expr::parse_with_meta_path (1 samples, 3.70%)</title><rect x="88.8889%" y="261" width="3.7037%" height="15" fill="rgb(224,71,38)" fg:x="24" fg:w="1"/><text x="89.1389%" y="271.50">rune..</text></g><g><title>rune::parsing::parser::Peeker::at (1 samples, 3.70%)</title><rect x="88.8889%" y="245" width="3.7037%" height="15" fill="rgb(228,156,38)" fg:x="24" fg:w="1"/><text x="89.1389%" y="255.50">rune..</text></g><g><title>&lt;rune::ast::file::File as rune::indexing::index::Index&gt;::index (1 samples, 3.70%)</title><rect x="92.5926%" y="389" width="3.7037%" height="15" fill="rgb(205,127,27)" fg:x="25" fg:w="1"/><text x="92.8426%" y="399.50">&lt;run..</text></g><g><title>&lt;rune::ast::item::Item as rune::indexing::index::Index&gt;::index (1 samples, 3.70%)</title><rect x="92.5926%" y="373" width="3.7037%" height="15" fill="rgb(228,32,50)" fg:x="25" fg:w="1"/><text x="92.8426%" y="383.50">&lt;run..</text></g><g><title>&lt;rune::ast::item_fn::ItemFn as rune::indexing::index::Index&gt;::index (1 samples, 3.70%)</title><rect x="92.5926%" y="357" width="3.7037%" height="15" fill="rgb(205,73,43)" fg:x="25" fg:w="1"/><text x="92.8426%" y="367.50">&lt;run..</text></g><g><title>&lt;rune::ast::item_fn::ItemFn as core::clone::Clone&gt;::clone (1 samples, 3.70%)</title><rect x="92.5926%" y="341" width="3.7037%" height="15" fill="rgb(253,144,51)" fg:x="25" fg:w="1"/><text x="92.8426%" y="351.50">&lt;run..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 3.70%)</title><rect x="92.5926%" y="325" width="3.7037%" height="15" fill="rgb(237,125,20)" fg:x="25" fg:w="1"/><text x="92.8426%" y="335.50">&lt;all..</text></g><g><title>&lt;rune::ast::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 3.70%)</title><rect x="92.5926%" y="309" width="3.7037%" height="15" fill="rgb(211,79,54)" fg:x="25" fg:w="1"/><text x="92.8426%" y="319.50">&lt;run..</text></g><g><title>&lt;rune::ast::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 3.70%)</title><rect x="92.5926%" y="293" width="3.7037%" height="15" fill="rgb(230,5,39)" fg:x="25" fg:w="1"/><text x="92.8426%" y="303.50">&lt;run..</text></g><g><title>&lt;rune::ast::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 3.70%)</title><rect x="92.5926%" y="277" width="3.7037%" height="15" fill="rgb(245,34,20)" fg:x="25" fg:w="1"/><text x="92.8426%" y="287.50">&lt;run..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 3.70%)</title><rect x="92.5926%" y="261" width="3.7037%" height="15" fill="rgb(225,185,27)" fg:x="25" fg:w="1"/><text x="92.8426%" y="271.50">&lt;T a..</text></g><g><title>all (27 samples, 100%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(214,109,31)" fg:x="0" fg:w="27"/><text x="0.2500%" y="751.50"></text></g><g><title>ressa_mem_bench (27 samples, 100.00%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(222,78,20)" fg:x="0" fg:w="27"/><text x="0.2500%" y="735.50">ressa_mem_bench</text></g><g><title>std::rt::lang_start::{{closure}} (2 samples, 7.41%)</title><rect x="92.5926%" y="709" width="7.4074%" height="15" fill="rgb(207,223,0)" fg:x="25" fg:w="2"/><text x="92.8426%" y="719.50">std::rt::l..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 7.41%)</title><rect x="92.5926%" y="693" width="7.4074%" height="15" fill="rgb(208,92,40)" fg:x="25" fg:w="2"/><text x="92.8426%" y="703.50">std::sys_c..</text></g><g><title>ressa_mem_bench::main (2 samples, 7.41%)</title><rect x="92.5926%" y="677" width="7.4074%" height="15" fill="rgb(231,205,21)" fg:x="25" fg:w="2"/><text x="92.8426%" y="687.50">ressa_mem_..</text></g><g><title>ressa_mem_bench::ressa_benchmark (2 samples, 7.41%)</title><rect x="92.5926%" y="661" width="7.4074%" height="15" fill="rgb(251,156,50)" fg:x="25" fg:w="2"/><text x="92.8426%" y="671.50">ressa_mem_..</text></g><g><title>criterion::Criterion&lt;M&gt;::bench_function (2 samples, 7.41%)</title><rect x="92.5926%" y="645" width="7.4074%" height="15" fill="rgb(226,129,3)" fg:x="25" fg:w="2"/><text x="92.8426%" y="655.50">criterion:..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (2 samples, 7.41%)</title><rect x="92.5926%" y="629" width="7.4074%" height="15" fill="rgb(223,201,9)" fg:x="25" fg:w="2"/><text x="92.8426%" y="639.50">criterion:..</text></g><g><title>criterion::analysis::common (2 samples, 7.41%)</title><rect x="92.5926%" y="613" width="7.4074%" height="15" fill="rgb(242,89,39)" fg:x="25" fg:w="2"/><text x="92.8426%" y="623.50">criterion:..</text></g><g><title>criterion::routine::Routine::sample (2 samples, 7.41%)</title><rect x="92.5926%" y="597" width="7.4074%" height="15" fill="rgb(238,110,20)" fg:x="25" fg:w="2"/><text x="92.8426%" y="607.50">criterion:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 7.41%)</title><rect x="92.5926%" y="581" width="7.4074%" height="15" fill="rgb(217,65,28)" fg:x="25" fg:w="2"/><text x="92.8426%" y="591.50">&lt;core::ite..</text></g><g><title>source_code_parser::ressa::run_ressa_parse (2 samples, 7.41%)</title><rect x="92.5926%" y="565" width="7.4074%" height="15" fill="rgb(224,218,24)" fg:x="25" fg:w="2"/><text x="92.8426%" y="575.50">source_cod..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (2 samples, 7.41%)</title><rect x="92.5926%" y="549" width="7.4074%" height="15" fill="rgb(253,2,34)" fg:x="25" fg:w="2"/><text x="92.8426%" y="559.50">&lt;source_co..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (2 samples, 7.41%)</title><rect x="92.5926%" y="533" width="7.4074%" height="15" fill="rgb(240,89,11)" fg:x="25" fg:w="2"/><text x="92.8426%" y="543.50">source_cod..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::pattern_parser::NodePatternParser&gt;::parse (2 samples, 7.41%)</title><rect x="92.5926%" y="517" width="7.4074%" height="15" fill="rgb(226,22,2)" fg:x="25" fg:w="2"/><text x="92.8426%" y="527.50">&lt;source_co..</text></g><g><title>&lt;source_code_parser::prophet::component::FieldComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (2 samples, 7.41%)</title><rect x="92.5926%" y="501" width="7.4074%" height="15" fill="rgb(206,168,11)" fg:x="25" fg:w="2"/><text x="92.8426%" y="511.50">&lt;source_co..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (2 samples, 7.41%)</title><rect x="92.5926%" y="485" width="7.4074%" height="15" fill="rgb(249,221,47)" fg:x="25" fg:w="2"/><text x="92.8426%" y="495.50">source_cod..</text></g><g><title>source_code_parser::ressa::callback::Executor::execute (2 samples, 7.41%)</title><rect x="92.5926%" y="469" width="7.4074%" height="15" fill="rgb(242,68,22)" fg:x="25" fg:w="2"/><text x="92.8426%" y="479.50">source_cod..</text></g><g><title>rune::load::load_sources (2 samples, 7.41%)</title><rect x="92.5926%" y="453" width="7.4074%" height="15" fill="rgb(240,204,38)" fg:x="25" fg:w="2"/><text x="92.8426%" y="463.50">rune::load..</text></g><g><title>rune::load::load_sources_with_visitor (2 samples, 7.41%)</title><rect x="92.5926%" y="437" width="7.4074%" height="15" fill="rgb(243,130,12)" fg:x="25" fg:w="2"/><text x="92.8426%" y="447.50">rune::load..</text></g><g><title>rune::compiling::compile_with_options (2 samples, 7.41%)</title><rect x="92.5926%" y="421" width="7.4074%" height="15" fill="rgb(211,57,41)" fg:x="25" fg:w="2"/><text x="92.8426%" y="431.50">rune::comp..</text></g><g><title>rune::worker::Worker::run (2 samples, 7.41%)</title><rect x="92.5926%" y="405" width="7.4074%" height="15" fill="rgb(248,33,11)" fg:x="25" fg:w="2"/><text x="92.8426%" y="415.50">rune::work..</text></g><g><title>rune::parse_all (1 samples, 3.70%)</title><rect x="96.2963%" y="389" width="3.7037%" height="15" fill="rgb(228,207,6)" fg:x="26" fg:w="1"/><text x="96.5463%" y="399.50">rune..</text></g><g><title>&lt;rune::ast::file::File as rune::parsing::parse::Parse&gt;::parse (1 samples, 3.70%)</title><rect x="96.2963%" y="373" width="3.7037%" height="15" fill="rgb(221,18,47)" fg:x="26" fg:w="1"/><text x="96.5463%" y="383.50">&lt;run..</text></g><g><title>rune::ast::item::Item::parse_with_meta_path (1 samples, 3.70%)</title><rect x="96.2963%" y="357" width="3.7037%" height="15" fill="rgb(210,56,53)" fg:x="26" fg:w="1"/><text x="96.5463%" y="367.50">rune..</text></g><g><title>rune::ast::item_fn::ItemFn::parse_with_meta (1 samples, 3.70%)</title><rect x="96.2963%" y="341" width="3.7037%" height="15" fill="rgb(225,210,19)" fg:x="26" fg:w="1"/><text x="96.5463%" y="351.50">rune..</text></g><g><title>&lt;rune::ast::block::Block as rune::parsing::parse::Parse&gt;::parse (1 samples, 3.70%)</title><rect x="96.2963%" y="325" width="3.7037%" height="15" fill="rgb(231,29,35)" fg:x="26" fg:w="1"/><text x="96.5463%" y="335.50">&lt;run..</text></g><g><title>&lt;rune::ast::stmt::Stmt as rune::parsing::parse::Parse&gt;::parse (1 samples, 3.70%)</title><rect x="96.2963%" y="309" width="3.7037%" height="15" fill="rgb(212,185,44)" fg:x="26" fg:w="1"/><text x="96.5463%" y="319.50">&lt;run..</text></g><g><title>rune::ast::local::Local::parse_with_meta (1 samples, 3.70%)</title><rect x="96.2963%" y="293" width="3.7037%" height="15" fill="rgb(208,47,52)" fg:x="26" fg:w="1"/><text x="96.5463%" y="303.50">rune..</text></g><g><title>&lt;rune::ast::pat::Pat as rune::parsing::parse::Parse&gt;::parse (1 samples, 3.70%)</title><rect x="96.2963%" y="277" width="3.7037%" height="15" fill="rgb(253,193,44)" fg:x="26" fg:w="1"/><text x="96.5463%" y="287.50">&lt;run..</text></g><g><title>&lt;rune::ast::path::Path as rune::parsing::peek::Peek&gt;::peek (1 samples, 3.70%)</title><rect x="96.2963%" y="261" width="3.7037%" height="15" fill="rgb(211,139,32)" fg:x="26" fg:w="1"/><text x="96.5463%" y="271.50">&lt;run..</text></g><g><title>rune::parsing::parser::Peeker::at (1 samples, 3.70%)</title><rect x="96.2963%" y="245" width="3.7037%" height="15" fill="rgb(249,117,42)" fg:x="26" fg:w="1"/><text x="96.5463%" y="255.50">rune..</text></g></svg></svg>