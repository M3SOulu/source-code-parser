<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="934" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="917.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="917.00"> </text><svg id="frames" x="10" width="1180" total_samples="49"><g><title>rune::compiling::v1::assemble::item_fn::&lt;impl rune::compiling::v1::assemble::AssembleFn for rune::ast::item_fn::ItemFn&gt;::assemble_fn (1 samples, 2.04%)</title><rect x="0.0000%" y="373" width="2.0408%" height="15" fill="rgb(249,137,30)" fg:x="0" fg:w="1"/><text x="0.2500%" y="383.50">r..</text></g><g><title>rune::compiling::v1::assemble::block::&lt;impl rune::compiling::v1::assemble::Assemble for rune::ast::block::Block&gt;::assemble (1 samples, 2.04%)</title><rect x="0.0000%" y="357" width="2.0408%" height="15" fill="rgb(210,216,21)" fg:x="0" fg:w="1"/><text x="0.2500%" y="367.50">r..</text></g><g><title>rune::compiling::v1::assemble::expr::&lt;impl rune::compiling::v1::assemble::Assemble for rune::ast::expr::Expr&gt;::assemble (1 samples, 2.04%)</title><rect x="0.0000%" y="341" width="2.0408%" height="15" fill="rgb(205,15,49)" fg:x="0" fg:w="1"/><text x="0.2500%" y="351.50">r..</text></g><g><title>rune::compiling::v1::assemble::expr_call::&lt;impl rune::compiling::v1::assemble::Assemble for rune::ast::expr_call::ExprCall&gt;::assemble (1 samples, 2.04%)</title><rect x="0.0000%" y="325" width="2.0408%" height="15" fill="rgb(241,150,13)" fg:x="0" fg:w="1"/><text x="0.2500%" y="335.50">r..</text></g><g><title>rune::compiling::v1::assemble::expr::&lt;impl rune::compiling::v1::assemble::Assemble for rune::ast::expr::Expr&gt;::assemble (1 samples, 2.04%)</title><rect x="0.0000%" y="309" width="2.0408%" height="15" fill="rgb(245,14,16)" fg:x="0" fg:w="1"/><text x="0.2500%" y="319.50">r..</text></g><g><title>rune::compiling::v1::assemble::expr_call::&lt;impl rune::compiling::v1::assemble::Assemble for rune::ast::expr_call::ExprCall&gt;::assemble (1 samples, 2.04%)</title><rect x="0.0000%" y="293" width="2.0408%" height="15" fill="rgb(206,136,43)" fg:x="0" fg:w="1"/><text x="0.2500%" y="303.50">r..</text></g><g><title>runestick::hash::Hash::path_hash (1 samples, 2.04%)</title><rect x="0.0000%" y="277" width="2.0408%" height="15" fill="rgb(211,39,5)" fg:x="0" fg:w="1"/><text x="0.2500%" y="287.50">r..</text></g><g><title>&lt;twox_hash::sixty_four::XxHash64 as core::default::Default&gt;::default (1 samples, 2.04%)</title><rect x="0.0000%" y="261" width="2.0408%" height="15" fill="rgb(241,193,45)" fg:x="0" fg:w="1"/><text x="0.2500%" y="271.50">&lt;..</text></g><g><title>&lt;rune::ast::file::File as rune::indexing::index::Index&gt;::index (1 samples, 2.04%)</title><rect x="2.0408%" y="357" width="2.0408%" height="15" fill="rgb(245,47,31)" fg:x="1" fg:w="1"/><text x="2.2908%" y="367.50">&lt;..</text></g><g><title>&lt;rune::ast::item::Item as rune::indexing::index::Index&gt;::index (1 samples, 2.04%)</title><rect x="2.0408%" y="341" width="2.0408%" height="15" fill="rgb(219,103,37)" fg:x="1" fg:w="1"/><text x="2.2908%" y="351.50">&lt;..</text></g><g><title>&lt;rune::ast::item_fn::ItemFn as rune::indexing::index::Index&gt;::index (1 samples, 2.04%)</title><rect x="2.0408%" y="325" width="2.0408%" height="15" fill="rgb(222,182,0)" fg:x="1" fg:w="1"/><text x="2.2908%" y="335.50">&lt;..</text></g><g><title>&lt;rune::ast::item_fn::ItemFn as core::clone::Clone&gt;::clone (1 samples, 2.04%)</title><rect x="2.0408%" y="309" width="2.0408%" height="15" fill="rgb(218,204,30)" fg:x="1" fg:w="1"/><text x="2.2908%" y="319.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 2.04%)</title><rect x="2.0408%" y="293" width="2.0408%" height="15" fill="rgb(239,92,54)" fg:x="1" fg:w="1"/><text x="2.2908%" y="303.50">&lt;..</text></g><g><title>&lt;rune::ast::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 2.04%)</title><rect x="2.0408%" y="277" width="2.0408%" height="15" fill="rgb(219,39,37)" fg:x="1" fg:w="1"/><text x="2.2908%" y="287.50">&lt;..</text></g><g><title>&lt;rune::ast::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 2.04%)</title><rect x="2.0408%" y="261" width="2.0408%" height="15" fill="rgb(240,127,0)" fg:x="1" fg:w="1"/><text x="2.2908%" y="271.50">&lt;..</text></g><g><title>__libc_start_main (3 samples, 6.12%)</title><rect x="0.0000%" y="853" width="6.1224%" height="15" fill="rgb(236,33,33)" fg:x="0" fg:w="3"/><text x="0.2500%" y="863.50">__libc_s..</text></g><g><title>main (3 samples, 6.12%)</title><rect x="0.0000%" y="837" width="6.1224%" height="15" fill="rgb(238,87,16)" fg:x="0" fg:w="3"/><text x="0.2500%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal (3 samples, 6.12%)</title><rect x="0.0000%" y="821" width="6.1224%" height="15" fill="rgb(234,134,41)" fg:x="0" fg:w="3"/><text x="0.2500%" y="831.50">std::rt:..</text></g><g><title>std::panic::catch_unwind (3 samples, 6.12%)</title><rect x="0.0000%" y="805" width="6.1224%" height="15" fill="rgb(248,142,30)" fg:x="0" fg:w="3"/><text x="0.2500%" y="815.50">std::pan..</text></g><g><title>std::panicking::try (3 samples, 6.12%)</title><rect x="0.0000%" y="789" width="6.1224%" height="15" fill="rgb(233,72,47)" fg:x="0" fg:w="3"/><text x="0.2500%" y="799.50">std::pan..</text></g><g><title>std::panicking::try::do_call (3 samples, 6.12%)</title><rect x="0.0000%" y="773" width="6.1224%" height="15" fill="rgb(241,201,4)" fg:x="0" fg:w="3"/><text x="0.2500%" y="783.50">std::pan..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (3 samples, 6.12%)</title><rect x="0.0000%" y="757" width="6.1224%" height="15" fill="rgb(222,73,45)" fg:x="0" fg:w="3"/><text x="0.2500%" y="767.50">std::rt:..</text></g><g><title>std::panic::catch_unwind (3 samples, 6.12%)</title><rect x="0.0000%" y="741" width="6.1224%" height="15" fill="rgb(234,98,45)" fg:x="0" fg:w="3"/><text x="0.2500%" y="751.50">std::pan..</text></g><g><title>std::panicking::try (3 samples, 6.12%)</title><rect x="0.0000%" y="725" width="6.1224%" height="15" fill="rgb(208,48,14)" fg:x="0" fg:w="3"/><text x="0.2500%" y="735.50">std::pan..</text></g><g><title>std::panicking::try::do_call (3 samples, 6.12%)</title><rect x="0.0000%" y="709" width="6.1224%" height="15" fill="rgb(219,172,32)" fg:x="0" fg:w="3"/><text x="0.2500%" y="719.50">std::pan..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 6.12%)</title><rect x="0.0000%" y="693" width="6.1224%" height="15" fill="rgb(245,210,26)" fg:x="0" fg:w="3"/><text x="0.2500%" y="703.50">core::op..</text></g><g><title>std::rt::lang_start::{{closure}} (3 samples, 6.12%)</title><rect x="0.0000%" y="677" width="6.1224%" height="15" fill="rgb(230,193,13)" fg:x="0" fg:w="3"/><text x="0.2500%" y="687.50">std::rt:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 6.12%)</title><rect x="0.0000%" y="661" width="6.1224%" height="15" fill="rgb(241,138,24)" fg:x="0" fg:w="3"/><text x="0.2500%" y="671.50">std::sys..</text></g><g><title>ressa_mem_bench::main (3 samples, 6.12%)</title><rect x="0.0000%" y="645" width="6.1224%" height="15" fill="rgb(232,91,19)" fg:x="0" fg:w="3"/><text x="0.2500%" y="655.50">ressa_me..</text></g><g><title>ressa_mem_bench::ressa_benchmark (3 samples, 6.12%)</title><rect x="0.0000%" y="629" width="6.1224%" height="15" fill="rgb(210,222,2)" fg:x="0" fg:w="3"/><text x="0.2500%" y="639.50">ressa_me..</text></g><g><title>criterion::Criterion&lt;M&gt;::bench_function (3 samples, 6.12%)</title><rect x="0.0000%" y="613" width="6.1224%" height="15" fill="rgb(207,205,39)" fg:x="0" fg:w="3"/><text x="0.2500%" y="623.50">criterio..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (3 samples, 6.12%)</title><rect x="0.0000%" y="597" width="6.1224%" height="15" fill="rgb(242,101,28)" fg:x="0" fg:w="3"/><text x="0.2500%" y="607.50">criterio..</text></g><g><title>criterion::analysis::common (3 samples, 6.12%)</title><rect x="0.0000%" y="581" width="6.1224%" height="15" fill="rgb(210,23,14)" fg:x="0" fg:w="3"/><text x="0.2500%" y="591.50">criterio..</text></g><g><title>criterion::routine::Routine::sample (3 samples, 6.12%)</title><rect x="0.0000%" y="565" width="6.1224%" height="15" fill="rgb(215,47,2)" fg:x="0" fg:w="3"/><text x="0.2500%" y="575.50">criterio..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 6.12%)</title><rect x="0.0000%" y="549" width="6.1224%" height="15" fill="rgb(214,113,20)" fg:x="0" fg:w="3"/><text x="0.2500%" y="559.50">&lt;core::i..</text></g><g><title>source_code_parser::ressa::run_ressa_parse (3 samples, 6.12%)</title><rect x="0.0000%" y="533" width="6.1224%" height="15" fill="rgb(243,158,51)" fg:x="0" fg:w="3"/><text x="0.2500%" y="543.50">source_c..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (3 samples, 6.12%)</title><rect x="0.0000%" y="517" width="6.1224%" height="15" fill="rgb(211,221,11)" fg:x="0" fg:w="3"/><text x="0.2500%" y="527.50">&lt;source_..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (3 samples, 6.12%)</title><rect x="0.0000%" y="501" width="6.1224%" height="15" fill="rgb(241,159,44)" fg:x="0" fg:w="3"/><text x="0.2500%" y="511.50">source_c..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::pattern_parser::NodePatternParser&gt;::parse (3 samples, 6.12%)</title><rect x="0.0000%" y="485" width="6.1224%" height="15" fill="rgb(228,196,18)" fg:x="0" fg:w="3"/><text x="0.2500%" y="495.50">&lt;source_..</text></g><g><title>&lt;source_code_parser::prophet::component::FieldComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (3 samples, 6.12%)</title><rect x="0.0000%" y="469" width="6.1224%" height="15" fill="rgb(210,203,22)" fg:x="0" fg:w="3"/><text x="0.2500%" y="479.50">&lt;source_..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (3 samples, 6.12%)</title><rect x="0.0000%" y="453" width="6.1224%" height="15" fill="rgb(232,211,8)" fg:x="0" fg:w="3"/><text x="0.2500%" y="463.50">source_c..</text></g><g><title>source_code_parser::ressa::callback::Executor::execute (3 samples, 6.12%)</title><rect x="0.0000%" y="437" width="6.1224%" height="15" fill="rgb(254,52,21)" fg:x="0" fg:w="3"/><text x="0.2500%" y="447.50">source_c..</text></g><g><title>rune::load::load_sources (3 samples, 6.12%)</title><rect x="0.0000%" y="421" width="6.1224%" height="15" fill="rgb(214,7,25)" fg:x="0" fg:w="3"/><text x="0.2500%" y="431.50">rune::lo..</text></g><g><title>rune::load::load_sources_with_visitor (3 samples, 6.12%)</title><rect x="0.0000%" y="405" width="6.1224%" height="15" fill="rgb(253,190,11)" fg:x="0" fg:w="3"/><text x="0.2500%" y="415.50">rune::lo..</text></g><g><title>rune::compiling::compile_with_options (3 samples, 6.12%)</title><rect x="0.0000%" y="389" width="6.1224%" height="15" fill="rgb(244,50,30)" fg:x="0" fg:w="3"/><text x="0.2500%" y="399.50">rune::co..</text></g><g><title>rune::worker::Worker::run (2 samples, 4.08%)</title><rect x="2.0408%" y="373" width="4.0816%" height="15" fill="rgb(216,45,3)" fg:x="1" fg:w="2"/><text x="2.2908%" y="383.50">rune..</text></g><g><title>rune::parse_all (1 samples, 2.04%)</title><rect x="4.0816%" y="357" width="2.0408%" height="15" fill="rgb(245,185,36)" fg:x="2" fg:w="1"/><text x="4.3316%" y="367.50">r..</text></g><g><title>&lt;rune::ast::file::File as rune::parsing::parse::Parse&gt;::parse (1 samples, 2.04%)</title><rect x="4.0816%" y="341" width="2.0408%" height="15" fill="rgb(245,39,9)" fg:x="2" fg:w="1"/><text x="4.3316%" y="351.50">&lt;..</text></g><g><title>rune::ast::item::Item::parse_with_meta_path (1 samples, 2.04%)</title><rect x="4.0816%" y="325" width="2.0408%" height="15" fill="rgb(242,26,16)" fg:x="2" fg:w="1"/><text x="4.3316%" y="335.50">r..</text></g><g><title>rune::ast::item_fn::ItemFn::parse_with_meta (1 samples, 2.04%)</title><rect x="4.0816%" y="309" width="2.0408%" height="15" fill="rgb(250,111,52)" fg:x="2" fg:w="1"/><text x="4.3316%" y="319.50">r..</text></g><g><title>&lt;rune::ast::grouped::Parenthesized&lt;T,S&gt; as rune::parsing::parse::Parse&gt;::parse (1 samples, 2.04%)</title><rect x="4.0816%" y="293" width="2.0408%" height="15" fill="rgb(222,206,37)" fg:x="2" fg:w="1"/><text x="4.3316%" y="303.50">&lt;..</text></g><g><title>rune::parsing::parser::Parser::next (1 samples, 2.04%)</title><rect x="4.0816%" y="277" width="2.0408%" height="15" fill="rgb(219,162,9)" fg:x="2" fg:w="1"/><text x="4.3316%" y="287.50">r..</text></g><g><title>rune::parsing::lexer::Lexer::next (1 samples, 2.04%)</title><rect x="4.0816%" y="261" width="2.0408%" height="15" fill="rgb(239,173,12)" fg:x="2" fg:w="1"/><text x="4.3316%" y="271.50">r..</text></g><g><title>core::ptr::drop_in_place&lt;source_code_parser::prophet::component::ModuleComponent&gt; (1 samples, 2.04%)</title><rect x="6.1224%" y="517" width="2.0408%" height="15" fill="rgb(205,138,51)" fg:x="3" fg:w="1"/><text x="6.3724%" y="527.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;source_code_parser::prophet::component::ContainerComponent&gt; (1 samples, 2.04%)</title><rect x="6.1224%" y="501" width="2.0408%" height="15" fill="rgb(245,86,31)" fg:x="3" fg:w="1"/><text x="6.3724%" y="511.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;source_code_parser::ast::Node&gt;&gt; (1 samples, 2.04%)</title><rect x="6.1224%" y="485" width="2.0408%" height="15" fill="rgb(251,38,43)" fg:x="3" fg:w="1"/><text x="6.3724%" y="495.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;source_code_parser::ast::expr::CallExpr&gt; (1 samples, 2.04%)</title><rect x="6.1224%" y="469" width="2.0408%" height="15" fill="rgb(211,219,4)" fg:x="3" fg:w="1"/><text x="6.3724%" y="479.50">c..</text></g><g><title>_rjem_sdallocx (1 samples, 2.04%)</title><rect x="6.1224%" y="453" width="2.0408%" height="15" fill="rgb(211,58,35)" fg:x="3" fg:w="1"/><text x="6.3724%" y="463.50">_..</text></g><g><title>isfree (1 samples, 2.04%)</title><rect x="6.1224%" y="437" width="2.0408%" height="15" fill="rgb(213,167,29)" fg:x="3" fg:w="1"/><text x="6.3724%" y="447.50">i..</text></g><g><title>isdalloct (1 samples, 2.04%)</title><rect x="6.1224%" y="421" width="2.0408%" height="15" fill="rgb(234,53,25)" fg:x="3" fg:w="1"/><text x="6.3724%" y="431.50">i..</text></g><g><title>arena_sdalloc (1 samples, 2.04%)</title><rect x="6.1224%" y="405" width="2.0408%" height="15" fill="rgb(228,132,38)" fg:x="3" fg:w="1"/><text x="6.3724%" y="415.50">a..</text></g><g><title>tcache_dalloc_small (1 samples, 2.04%)</title><rect x="6.1224%" y="389" width="2.0408%" height="15" fill="rgb(254,47,52)" fg:x="3" fg:w="1"/><text x="6.3724%" y="399.50">t..</text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 2.04%)</title><rect x="6.1224%" y="373" width="2.0408%" height="15" fill="rgb(209,223,52)" fg:x="3" fg:w="1"/><text x="6.3724%" y="383.50">_..</text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 2.04%)</title><rect x="6.1224%" y="357" width="2.0408%" height="15" fill="rgb(252,49,40)" fg:x="3" fg:w="1"/><text x="6.3724%" y="367.50">_..</text></g><g><title>arena_dalloc_bin_locked_impl (1 samples, 2.04%)</title><rect x="6.1224%" y="341" width="2.0408%" height="15" fill="rgb(249,1,18)" fg:x="3" fg:w="1"/><text x="6.3724%" y="351.50">a..</text></g><g><title>arena_dalloc_bin_slab (1 samples, 2.04%)</title><rect x="6.1224%" y="325" width="2.0408%" height="15" fill="rgb(249,50,29)" fg:x="3" fg:w="1"/><text x="6.3724%" y="335.50">a..</text></g><g><title>arena_slab_dalloc (1 samples, 2.04%)</title><rect x="6.1224%" y="309" width="2.0408%" height="15" fill="rgb(251,36,39)" fg:x="3" fg:w="1"/><text x="6.3724%" y="319.50">a..</text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (1 samples, 2.04%)</title><rect x="6.1224%" y="293" width="2.0408%" height="15" fill="rgb(223,101,6)" fg:x="3" fg:w="1"/><text x="6.3724%" y="303.50">_..</text></g><g><title>extent_record (1 samples, 2.04%)</title><rect x="6.1224%" y="277" width="2.0408%" height="15" fill="rgb(253,78,18)" fg:x="3" fg:w="1"/><text x="6.3724%" y="287.50">e..</text></g><g><title>extent_deactivate_locked (1 samples, 2.04%)</title><rect x="6.1224%" y="261" width="2.0408%" height="15" fill="rgb(213,220,52)" fg:x="3" fg:w="1"/><text x="6.3724%" y="271.50">e..</text></g><g><title>extent_state_set (1 samples, 2.04%)</title><rect x="6.1224%" y="245" width="2.0408%" height="15" fill="rgb(229,203,40)" fg:x="3" fg:w="1"/><text x="6.3724%" y="255.50">e..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 2.04%)</title><rect x="8.1633%" y="469" width="2.0408%" height="15" fill="rgb(242,108,6)" fg:x="4" fg:w="1"/><text x="8.4133%" y="479.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 2.04%)</title><rect x="8.1633%" y="453" width="2.0408%" height="15" fill="rgb(215,176,39)" fg:x="4" fg:w="1"/><text x="8.4133%" y="463.50">&lt;..</text></g><g><title>arena_bin_malloc_hard (1 samples, 2.04%)</title><rect x="14.2857%" y="69" width="2.0408%" height="15" fill="rgb(247,178,13)" fg:x="7" fg:w="1"/><text x="14.5357%" y="79.50">a..</text></g><g><title>_rjem_je_tcache_alloc_small_hard (3 samples, 6.12%)</title><rect x="14.2857%" y="101" width="6.1224%" height="15" fill="rgb(225,70,11)" fg:x="7" fg:w="3"/><text x="14.5357%" y="111.50">_rjem_je..</text></g><g><title>_rjem_je_arena_tcache_fill_small (3 samples, 6.12%)</title><rect x="14.2857%" y="85" width="6.1224%" height="15" fill="rgb(214,165,22)" fg:x="7" fg:w="3"/><text x="14.5357%" y="95.50">_rjem_je..</text></g><g><title>arena_slab_reg_alloc (2 samples, 4.08%)</title><rect x="16.3265%" y="69" width="4.0816%" height="15" fill="rgb(236,152,12)" fg:x="8" fg:w="2"/><text x="16.5765%" y="79.50">aren..</text></g><g><title>bitmap_sfu (2 samples, 4.08%)</title><rect x="16.3265%" y="53" width="4.0816%" height="15" fill="rgb(245,40,54)" fg:x="8" fg:w="2"/><text x="16.5765%" y="63.50">bitm..</text></g><g><title>bitmap_set (2 samples, 4.08%)</title><rect x="16.3265%" y="37" width="4.0816%" height="15" fill="rgb(206,98,53)" fg:x="8" fg:w="2"/><text x="16.5765%" y="47.50">bitm..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 10.20%)</title><rect x="12.2449%" y="309" width="10.2041%" height="15" fill="rgb(250,35,52)" fg:x="6" fg:w="5"/><text x="12.4949%" y="319.50">alloc::vec::Vec..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 10.20%)</title><rect x="12.2449%" y="293" width="10.2041%" height="15" fill="rgb(250,153,11)" fg:x="6" fg:w="5"/><text x="12.4949%" y="303.50">alloc::raw_vec:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 10.20%)</title><rect x="12.2449%" y="277" width="10.2041%" height="15" fill="rgb(238,214,40)" fg:x="6" fg:w="5"/><text x="12.4949%" y="287.50">alloc::raw_vec:..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 10.20%)</title><rect x="12.2449%" y="261" width="10.2041%" height="15" fill="rgb(229,149,33)" fg:x="6" fg:w="5"/><text x="12.4949%" y="271.50">&lt;alloc::alloc::..</text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 10.20%)</title><rect x="12.2449%" y="245" width="10.2041%" height="15" fill="rgb(208,181,20)" fg:x="6" fg:w="5"/><text x="12.4949%" y="255.50">alloc::alloc::G..</text></g><g><title>alloc::alloc::alloc (5 samples, 10.20%)</title><rect x="12.2449%" y="229" width="10.2041%" height="15" fill="rgb(240,206,25)" fg:x="6" fg:w="5"/><text x="12.4949%" y="239.50">alloc::alloc::a..</text></g><g><title>_rjem_mallocx (5 samples, 10.20%)</title><rect x="12.2449%" y="213" width="10.2041%" height="15" fill="rgb(254,58,21)" fg:x="6" fg:w="5"/><text x="12.4949%" y="223.50">_rjem_mallocx</text></g><g><title>imalloc (5 samples, 10.20%)</title><rect x="12.2449%" y="197" width="10.2041%" height="15" fill="rgb(228,111,38)" fg:x="6" fg:w="5"/><text x="12.4949%" y="207.50">imalloc</text></g><g><title>imalloc_body (4 samples, 8.16%)</title><rect x="14.2857%" y="181" width="8.1633%" height="15" fill="rgb(206,18,48)" fg:x="7" fg:w="4"/><text x="14.5357%" y="191.50">imalloc_body</text></g><g><title>imalloc_no_sample (4 samples, 8.16%)</title><rect x="14.2857%" y="165" width="8.1633%" height="15" fill="rgb(215,185,39)" fg:x="7" fg:w="4"/><text x="14.5357%" y="175.50">imalloc_no_..</text></g><g><title>iallocztm (4 samples, 8.16%)</title><rect x="14.2857%" y="149" width="8.1633%" height="15" fill="rgb(246,78,28)" fg:x="7" fg:w="4"/><text x="14.5357%" y="159.50">iallocztm</text></g><g><title>arena_malloc (4 samples, 8.16%)</title><rect x="14.2857%" y="133" width="8.1633%" height="15" fill="rgb(217,87,40)" fg:x="7" fg:w="4"/><text x="14.5357%" y="143.50">arena_malloc</text></g><g><title>tcache_alloc_small (4 samples, 8.16%)</title><rect x="14.2857%" y="117" width="8.1633%" height="15" fill="rgb(223,126,39)" fg:x="7" fg:w="4"/><text x="14.5357%" y="127.50">tcache_allo..</text></g><g><title>cache_bin_alloc_easy (1 samples, 2.04%)</title><rect x="20.4082%" y="101" width="2.0408%" height="15" fill="rgb(233,144,46)" fg:x="10" fg:w="1"/><text x="20.6582%" y="111.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 14.29%)</title><rect x="10.2041%" y="421" width="14.2857%" height="15" fill="rgb(229,138,45)" fg:x="5" fg:w="7"/><text x="10.4541%" y="431.50">&lt;hashbrown::raw::RawTa..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 12.24%)</title><rect x="12.2449%" y="405" width="12.2449%" height="15" fill="rgb(218,31,9)" fg:x="6" fg:w="6"/><text x="12.4949%" y="415.50">&lt;hashbrown::raw::R..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 12.24%)</title><rect x="12.2449%" y="389" width="12.2449%" height="15" fill="rgb(214,114,37)" fg:x="6" fg:w="6"/><text x="12.4949%" y="399.50">&lt;alloc::string::St..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 12.24%)</title><rect x="12.2449%" y="373" width="12.2449%" height="15" fill="rgb(230,97,50)" fg:x="6" fg:w="6"/><text x="12.4949%" y="383.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 12.24%)</title><rect x="12.2449%" y="357" width="12.2449%" height="15" fill="rgb(244,167,32)" fg:x="6" fg:w="6"/><text x="12.4949%" y="367.50">alloc::slice::&lt;imp..</text></g><g><title>alloc::slice::hack::to_vec (6 samples, 12.24%)</title><rect x="12.2449%" y="341" width="12.2449%" height="15" fill="rgb(206,32,15)" fg:x="6" fg:w="6"/><text x="12.4949%" y="351.50">alloc::slice::hack..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 12.24%)</title><rect x="12.2449%" y="325" width="12.2449%" height="15" fill="rgb(250,202,18)" fg:x="6" fg:w="6"/><text x="12.4949%" y="335.50">&lt;T as alloc::slice..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 2.04%)</title><rect x="22.4490%" y="309" width="2.0408%" height="15" fill="rgb(246,212,40)" fg:x="11" fg:w="1"/><text x="22.6990%" y="319.50">c..</text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 2.04%)</title><rect x="22.4490%" y="293" width="2.0408%" height="15" fill="rgb(236,129,47)" fg:x="11" fg:w="1"/><text x="22.6990%" y="303.50">c..</text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 2.04%)</title><rect x="22.4490%" y="277" width="2.0408%" height="15" fill="rgb(251,11,6)" fg:x="11" fg:w="1"/><text x="22.6990%" y="287.50">_..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 8.16%)</title><rect x="24.4898%" y="421" width="8.1633%" height="15" fill="rgb(205,216,32)" fg:x="12" fg:w="4"/><text x="24.7398%" y="431.50">&lt;hashbrown:..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 8.16%)</title><rect x="24.4898%" y="405" width="8.1633%" height="15" fill="rgb(214,38,47)" fg:x="12" fg:w="4"/><text x="24.7398%" y="415.50">&lt;hashbrown:..</text></g><g><title>_rjem_sdallocx (4 samples, 8.16%)</title><rect x="24.4898%" y="389" width="8.1633%" height="15" fill="rgb(244,222,28)" fg:x="12" fg:w="4"/><text x="24.7398%" y="399.50">_rjem_sdall..</text></g><g><title>isfree (4 samples, 8.16%)</title><rect x="24.4898%" y="373" width="8.1633%" height="15" fill="rgb(215,78,15)" fg:x="12" fg:w="4"/><text x="24.7398%" y="383.50">isfree</text></g><g><title>isdalloct (4 samples, 8.16%)</title><rect x="24.4898%" y="357" width="8.1633%" height="15" fill="rgb(234,205,26)" fg:x="12" fg:w="4"/><text x="24.7398%" y="367.50">isdalloct</text></g><g><title>arena_sdalloc (4 samples, 8.16%)</title><rect x="24.4898%" y="341" width="8.1633%" height="15" fill="rgb(210,198,27)" fg:x="12" fg:w="4"/><text x="24.7398%" y="351.50">arena_sdall..</text></g><g><title>tcache_dalloc_small (4 samples, 8.16%)</title><rect x="24.4898%" y="325" width="8.1633%" height="15" fill="rgb(227,91,16)" fg:x="12" fg:w="4"/><text x="24.7398%" y="335.50">tcache_dall..</text></g><g><title>_rjem_je_tcache_bin_flush_small (3 samples, 6.12%)</title><rect x="26.5306%" y="309" width="6.1224%" height="15" fill="rgb(214,43,30)" fg:x="13" fg:w="3"/><text x="26.7806%" y="319.50">_rjem_je..</text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (3 samples, 6.12%)</title><rect x="26.5306%" y="293" width="6.1224%" height="15" fill="rgb(236,10,47)" fg:x="13" fg:w="3"/><text x="26.7806%" y="303.50">_rjem_je..</text></g><g><title>arena_dalloc_bin_locked_impl (1 samples, 2.04%)</title><rect x="30.6122%" y="277" width="2.0408%" height="15" fill="rgb(240,35,5)" fg:x="15" fg:w="1"/><text x="30.8622%" y="287.50">a..</text></g><g><title>arena_dalloc_bin_slab (1 samples, 2.04%)</title><rect x="30.6122%" y="261" width="2.0408%" height="15" fill="rgb(249,16,13)" fg:x="15" fg:w="1"/><text x="30.8622%" y="271.50">a..</text></g><g><title>arena_slab_dalloc (1 samples, 2.04%)</title><rect x="30.6122%" y="245" width="2.0408%" height="15" fill="rgb(209,120,15)" fg:x="15" fg:w="1"/><text x="30.8622%" y="255.50">a..</text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (1 samples, 2.04%)</title><rect x="30.6122%" y="229" width="2.0408%" height="15" fill="rgb(217,102,25)" fg:x="15" fg:w="1"/><text x="30.8622%" y="239.50">_..</text></g><g><title>extent_record (1 samples, 2.04%)</title><rect x="30.6122%" y="213" width="2.0408%" height="15" fill="rgb(254,223,31)" fg:x="15" fg:w="1"/><text x="30.8622%" y="223.50">e..</text></g><g><title>malloc_mutex_lock (1 samples, 2.04%)</title><rect x="30.6122%" y="197" width="2.0408%" height="15" fill="rgb(251,77,52)" fg:x="15" fg:w="1"/><text x="30.8622%" y="207.50">m..</text></g><g><title>malloc_mutex_trylock_final (1 samples, 2.04%)</title><rect x="30.6122%" y="181" width="2.0408%" height="15" fill="rgb(212,128,47)" fg:x="15" fg:w="1"/><text x="30.8622%" y="191.50">m..</text></g><g><title>pthread_mutex_trylock (1 samples, 2.04%)</title><rect x="30.6122%" y="165" width="2.0408%" height="15" fill="rgb(232,18,38)" fg:x="15" fg:w="1"/><text x="30.8622%" y="175.50">p..</text></g><g><title>&lt;source_code_parser::prophet::component::AnnotationComponent as source_code_parser::ressa::pattern_parser::NodePatternParser&gt;::parse (1 samples, 2.04%)</title><rect x="32.6531%" y="421" width="2.0408%" height="15" fill="rgb(213,112,39)" fg:x="16" fg:w="1"/><text x="32.9031%" y="431.50">&lt;..</text></g><g><title>source_code_parser::ressa::node_pattern::CompiledPattern::matches (1 samples, 2.04%)</title><rect x="32.6531%" y="405" width="2.0408%" height="15" fill="rgb(205,119,10)" fg:x="16" fg:w="1"/><text x="32.9031%" y="415.50">s..</text></g><g><title>source_code_parser::ressa::node_pattern::CompiledPattern::match_and_insert (1 samples, 2.04%)</title><rect x="34.6939%" y="405" width="2.0408%" height="15" fill="rgb(249,201,19)" fg:x="17" fg:w="1"/><text x="34.9439%" y="415.50">s..</text></g><g><title>regex::re_unicode::Regex::captures (1 samples, 2.04%)</title><rect x="34.6939%" y="389" width="2.0408%" height="15" fill="rgb(221,201,26)" fg:x="17" fg:w="1"/><text x="34.9439%" y="399.50">r..</text></g><g><title>regex::re_unicode::Regex::captures_read_at (1 samples, 2.04%)</title><rect x="34.6939%" y="373" width="2.0408%" height="15" fill="rgb(238,182,36)" fg:x="17" fg:w="1"/><text x="34.9439%" y="383.50">r..</text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (1 samples, 2.04%)</title><rect x="34.6939%" y="357" width="2.0408%" height="15" fill="rgb(222,183,5)" fg:x="17" fg:w="1"/><text x="34.9439%" y="367.50">&lt;..</text></g><g><title>regex::exec::ExecNoSync::exec_nfa (1 samples, 2.04%)</title><rect x="34.6939%" y="341" width="2.0408%" height="15" fill="rgb(223,115,36)" fg:x="17" fg:w="1"/><text x="34.9439%" y="351.50">r..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (1 samples, 2.04%)</title><rect x="34.6939%" y="325" width="2.0408%" height="15" fill="rgb(236,180,9)" fg:x="17" fg:w="1"/><text x="34.9439%" y="335.50">r..</text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (1 samples, 2.04%)</title><rect x="34.6939%" y="309" width="2.0408%" height="15" fill="rgb(215,117,52)" fg:x="17" fg:w="1"/><text x="34.9439%" y="319.50">r..</text></g><g><title>&lt;source_code_parser::prophet::component::FieldComponent as source_code_parser::ressa::pattern_parser::NodePatternParser&gt;::parse (3 samples, 6.12%)</title><rect x="34.6939%" y="421" width="6.1224%" height="15" fill="rgb(239,142,9)" fg:x="17" fg:w="3"/><text x="34.9439%" y="431.50">&lt;source_..</text></g><g><title>source_code_parser::ressa::node_pattern::CompiledPattern::matches (2 samples, 4.08%)</title><rect x="36.7347%" y="405" width="4.0816%" height="15" fill="rgb(222,217,31)" fg:x="18" fg:w="2"/><text x="36.9847%" y="415.50">sour..</text></g><g><title>regex::re_unicode::Regex::captures (2 samples, 4.08%)</title><rect x="36.7347%" y="389" width="4.0816%" height="15" fill="rgb(211,187,46)" fg:x="18" fg:w="2"/><text x="36.9847%" y="399.50">rege..</text></g><g><title>regex::re_unicode::Regex::captures_read_at (2 samples, 4.08%)</title><rect x="36.7347%" y="373" width="4.0816%" height="15" fill="rgb(251,122,53)" fg:x="18" fg:w="2"/><text x="36.9847%" y="383.50">rege..</text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (2 samples, 4.08%)</title><rect x="36.7347%" y="357" width="4.0816%" height="15" fill="rgb(239,69,39)" fg:x="18" fg:w="2"/><text x="36.9847%" y="367.50">&lt;reg..</text></g><g><title>regex::dfa::Fsm::follow_epsilons (1 samples, 2.04%)</title><rect x="38.7755%" y="341" width="2.0408%" height="15" fill="rgb(254,158,21)" fg:x="19" fg:w="1"/><text x="39.0255%" y="351.50">r..</text></g><g><title>rune::compiling::unit_builder::UnitBuilder::new_function (2 samples, 4.08%)</title><rect x="42.8571%" y="357" width="4.0816%" height="15" fill="rgb(206,111,24)" fg:x="21" fg:w="2"/><text x="43.1071%" y="367.50">rune..</text></g><g><title>rune::compiling::unit_builder::Inner::add_assembly (2 samples, 4.08%)</title><rect x="42.8571%" y="341" width="4.0816%" height="15" fill="rgb(254,91,53)" fg:x="21" fg:w="2"/><text x="43.1071%" y="351.50">rune..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 2.04%)</title><rect x="44.8980%" y="325" width="2.0408%" height="15" fill="rgb(207,1,53)" fg:x="22" fg:w="1"/><text x="45.1480%" y="335.50">&lt;..</text></g><g><title>rune::compiling::compile_with_options (3 samples, 6.12%)</title><rect x="42.8571%" y="373" width="6.1224%" height="15" fill="rgb(229,216,45)" fg:x="21" fg:w="3"/><text x="43.1071%" y="383.50">rune::co..</text></g><g><title>rune::compiling::v1::assemble::item_fn::&lt;impl rune::compiling::v1::assemble::AssembleFn for rune::ast::item_fn::ItemFn&gt;::assemble_fn (1 samples, 2.04%)</title><rect x="46.9388%" y="357" width="2.0408%" height="15" fill="rgb(209,203,38)" fg:x="23" fg:w="1"/><text x="47.1888%" y="367.50">r..</text></g><g><title>rune::compiling::v1::assemble::block::&lt;impl rune::compiling::v1::assemble::Assemble for rune::ast::block::Block&gt;::assemble (1 samples, 2.04%)</title><rect x="46.9388%" y="341" width="2.0408%" height="15" fill="rgb(224,207,19)" fg:x="23" fg:w="1"/><text x="47.1888%" y="351.50">r..</text></g><g><title>rune::compiling::v1::assemble::expr::&lt;impl rune::compiling::v1::assemble::Assemble for rune::ast::expr::Expr&gt;::assemble (1 samples, 2.04%)</title><rect x="46.9388%" y="325" width="2.0408%" height="15" fill="rgb(254,118,49)" fg:x="23" fg:w="1"/><text x="47.1888%" y="335.50">r..</text></g><g><title>rune::compiling::v1::assemble::expr_path::&lt;impl rune::compiling::v1::assemble::Assemble for rune::ast::path::Path&gt;::assemble (1 samples, 2.04%)</title><rect x="46.9388%" y="309" width="2.0408%" height="15" fill="rgb(235,46,14)" fg:x="23" fg:w="1"/><text x="47.1888%" y="319.50">r..</text></g><g><title>rune::query::Query::convert_path (1 samples, 2.04%)</title><rect x="46.9388%" y="293" width="2.0408%" height="15" fill="rgb(225,176,23)" fg:x="23" fg:w="1"/><text x="47.1888%" y="303.50">r..</text></g><g><title>rune::query::QueryInner::import (1 samples, 2.04%)</title><rect x="46.9388%" y="277" width="2.0408%" height="15" fill="rgb(209,28,30)" fg:x="23" fg:w="1"/><text x="47.1888%" y="287.50">r..</text></g><g><title>&lt;&amp;&amp;str as runestick::item::IntoComponent&gt;::write_component (1 samples, 2.04%)</title><rect x="48.9796%" y="357" width="2.0408%" height="15" fill="rgb(210,150,3)" fg:x="24" fg:w="1"/><text x="49.2296%" y="367.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 2.04%)</title><rect x="48.9796%" y="341" width="2.0408%" height="15" fill="rgb(212,49,10)" fg:x="24" fg:w="1"/><text x="49.2296%" y="351.50">a..</text></g><g><title>rune::load::load_sources (6 samples, 12.24%)</title><rect x="42.8571%" y="405" width="12.2449%" height="15" fill="rgb(248,65,41)" fg:x="21" fg:w="6"/><text x="43.1071%" y="415.50">rune::load::load_s..</text></g><g><title>rune::load::load_sources_with_visitor (6 samples, 12.24%)</title><rect x="42.8571%" y="389" width="12.2449%" height="15" fill="rgb(207,27,27)" fg:x="21" fg:w="6"/><text x="43.1071%" y="399.50">rune::load::load_s..</text></g><g><title>rune::compiling::unit_builder::UnitBuilder::with_default_prelude (3 samples, 6.12%)</title><rect x="48.9796%" y="373" width="6.1224%" height="15" fill="rgb(218,201,29)" fg:x="24" fg:w="3"/><text x="49.2296%" y="383.50">rune::co..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::insert (2 samples, 4.08%)</title><rect x="51.0204%" y="357" width="4.0816%" height="15" fill="rgb(253,173,14)" fg:x="25" fg:w="2"/><text x="51.2704%" y="367.50">hash..</text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (2 samples, 4.08%)</title><rect x="51.0204%" y="341" width="4.0816%" height="15" fill="rgb(239,71,22)" fg:x="25" fg:w="2"/><text x="51.2704%" y="351.50">hash..</text></g><g><title>runestick::context::Context::runtime (5 samples, 10.20%)</title><rect x="55.1020%" y="405" width="10.2041%" height="15" fill="rgb(221,74,0)" fg:x="27" fg:w="5"/><text x="55.3520%" y="415.50">runestick::cont..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 10.20%)</title><rect x="55.1020%" y="389" width="10.2041%" height="15" fill="rgb(228,5,27)" fg:x="27" fg:w="5"/><text x="55.3520%" y="399.50">&lt;hashbrown::raw..</text></g><g><title>&lt;runestick::const_value::ConstValue as core::clone::Clone&gt;::clone (2 samples, 4.08%)</title><rect x="61.2245%" y="373" width="4.0816%" height="15" fill="rgb(242,85,29)" fg:x="30" fg:w="2"/><text x="61.4745%" y="383.50">&lt;run..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 4.08%)</title><rect x="61.2245%" y="357" width="4.0816%" height="15" fill="rgb(233,57,25)" fg:x="30" fg:w="2"/><text x="61.4745%" y="367.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 4.08%)</title><rect x="61.2245%" y="341" width="4.0816%" height="15" fill="rgb(222,138,30)" fg:x="30" fg:w="2"/><text x="61.4745%" y="351.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 4.08%)</title><rect x="61.2245%" y="325" width="4.0816%" height="15" fill="rgb(218,155,17)" fg:x="30" fg:w="2"/><text x="61.4745%" y="335.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (2 samples, 4.08%)</title><rect x="61.2245%" y="309" width="4.0816%" height="15" fill="rgb(207,225,42)" fg:x="30" fg:w="2"/><text x="61.4745%" y="319.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 4.08%)</title><rect x="61.2245%" y="293" width="4.0816%" height="15" fill="rgb(205,95,19)" fg:x="30" fg:w="2"/><text x="61.4745%" y="303.50">&lt;T a..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 4.08%)</title><rect x="61.2245%" y="277" width="4.0816%" height="15" fill="rgb(226,119,36)" fg:x="30" fg:w="2"/><text x="61.4745%" y="287.50">core..</text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 4.08%)</title><rect x="61.2245%" y="261" width="4.0816%" height="15" fill="rgb(221,102,11)" fg:x="30" fg:w="2"/><text x="61.4745%" y="271.50">core..</text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 4.08%)</title><rect x="61.2245%" y="245" width="4.0816%" height="15" fill="rgb(223,13,21)" fg:x="30" fg:w="2"/><text x="61.4745%" y="255.50">__me..</text></g><g><title>&lt;source_code_parser::prophet::component::FieldComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (28 samples, 57.14%)</title><rect x="10.2041%" y="453" width="57.1429%" height="15" fill="rgb(228,98,43)" fg:x="5" fg:w="28"/><text x="10.4541%" y="463.50">&lt;source_code_parser::prophet::component::FieldComponent as source_code_parser::ressa::explorer..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (28 samples, 57.14%)</title><rect x="10.2041%" y="437" width="57.1429%" height="15" fill="rgb(214,196,40)" fg:x="5" fg:w="28"/><text x="10.4541%" y="447.50">source_code_parser::ressa::node_pattern::ressa_node_parse</text></g><g><title>source_code_parser::ressa::callback::Executor::execute (13 samples, 26.53%)</title><rect x="40.8163%" y="421" width="26.5306%" height="15" fill="rgb(235,63,13)" fg:x="20" fg:w="13"/><text x="41.0663%" y="431.50">source_code_parser::ressa::callback::Execu..</text></g><g><title>runestick::vm_execution::VmExecution::complete (1 samples, 2.04%)</title><rect x="65.3061%" y="405" width="2.0408%" height="15" fill="rgb(212,190,34)" fg:x="32" fg:w="1"/><text x="65.5561%" y="415.50">r..</text></g><g><title>runestick::vm_execution::VmExecution::resume (1 samples, 2.04%)</title><rect x="65.3061%" y="389" width="2.0408%" height="15" fill="rgb(237,156,47)" fg:x="32" fg:w="1"/><text x="65.5561%" y="399.50">r..</text></g><g><title>core::ptr::drop_in_place&lt;runestick::vm::Vm&gt; (1 samples, 2.04%)</title><rect x="65.3061%" y="373" width="2.0408%" height="15" fill="rgb(245,88,44)" fg:x="32" fg:w="1"/><text x="65.5561%" y="383.50">c..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 2.04%)</title><rect x="65.3061%" y="357" width="2.0408%" height="15" fill="rgb(241,174,46)" fg:x="32" fg:w="1"/><text x="65.5561%" y="367.50">a..</text></g><g><title>_rjem_sdallocx (1 samples, 2.04%)</title><rect x="65.3061%" y="341" width="2.0408%" height="15" fill="rgb(207,83,10)" fg:x="32" fg:w="1"/><text x="65.5561%" y="351.50">_..</text></g><g><title>isfree (1 samples, 2.04%)</title><rect x="65.3061%" y="325" width="2.0408%" height="15" fill="rgb(253,13,22)" fg:x="32" fg:w="1"/><text x="65.5561%" y="335.50">i..</text></g><g><title>isdalloct (1 samples, 2.04%)</title><rect x="65.3061%" y="309" width="2.0408%" height="15" fill="rgb(246,34,24)" fg:x="32" fg:w="1"/><text x="65.5561%" y="319.50">i..</text></g><g><title>arena_sdalloc (1 samples, 2.04%)</title><rect x="65.3061%" y="293" width="2.0408%" height="15" fill="rgb(215,155,29)" fg:x="32" fg:w="1"/><text x="65.5561%" y="303.50">a..</text></g><g><title>tcache_dalloc_small (1 samples, 2.04%)</title><rect x="65.3061%" y="277" width="2.0408%" height="15" fill="rgb(207,147,0)" fg:x="32" fg:w="1"/><text x="65.5561%" y="287.50">t..</text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 2.04%)</title><rect x="65.3061%" y="261" width="2.0408%" height="15" fill="rgb(224,61,1)" fg:x="32" fg:w="1"/><text x="65.5561%" y="271.50">_..</text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 2.04%)</title><rect x="65.3061%" y="245" width="2.0408%" height="15" fill="rgb(246,36,50)" fg:x="32" fg:w="1"/><text x="65.5561%" y="255.50">_..</text></g><g><title>arena_dalloc_bin_locked_impl (1 samples, 2.04%)</title><rect x="65.3061%" y="229" width="2.0408%" height="15" fill="rgb(213,84,48)" fg:x="32" fg:w="1"/><text x="65.5561%" y="239.50">a..</text></g><g><title>arena_slab_reg_dalloc (1 samples, 2.04%)</title><rect x="65.3061%" y="213" width="2.0408%" height="15" fill="rgb(249,200,49)" fg:x="32" fg:w="1"/><text x="65.5561%" y="223.50">a..</text></g><g><title>bitmap_unset (1 samples, 2.04%)</title><rect x="65.3061%" y="197" width="2.0408%" height="15" fill="rgb(253,47,1)" fg:x="32" fg:w="1"/><text x="65.5561%" y="207.50">b..</text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 2.04%)</title><rect x="67.3469%" y="85" width="2.0408%" height="15" fill="rgb(227,45,43)" fg:x="33" fg:w="1"/><text x="67.5969%" y="95.50">_..</text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 2.04%)</title><rect x="67.3469%" y="69" width="2.0408%" height="15" fill="rgb(224,116,18)" fg:x="33" fg:w="1"/><text x="67.5969%" y="79.50">_..</text></g><g><title>arena_slab_reg_alloc (1 samples, 2.04%)</title><rect x="67.3469%" y="53" width="2.0408%" height="15" fill="rgb(240,43,0)" fg:x="33" fg:w="1"/><text x="67.5969%" y="63.50">a..</text></g><g><title>bitmap_sfu (1 samples, 2.04%)</title><rect x="67.3469%" y="37" width="2.0408%" height="15" fill="rgb(231,89,20)" fg:x="33" fg:w="1"/><text x="67.5969%" y="47.50">b..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 4.08%)</title><rect x="67.3469%" y="405" width="4.0816%" height="15" fill="rgb(238,52,32)" fg:x="33" fg:w="2"/><text x="67.5969%" y="415.50">&lt;has..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 4.08%)</title><rect x="67.3469%" y="389" width="4.0816%" height="15" fill="rgb(242,22,51)" fg:x="33" fg:w="2"/><text x="67.5969%" y="399.50">&lt;has..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 4.08%)</title><rect x="67.3469%" y="373" width="4.0816%" height="15" fill="rgb(209,160,52)" fg:x="33" fg:w="2"/><text x="67.5969%" y="383.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 4.08%)</title><rect x="67.3469%" y="357" width="4.0816%" height="15" fill="rgb(226,129,8)" fg:x="33" fg:w="2"/><text x="67.5969%" y="367.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 4.08%)</title><rect x="67.3469%" y="341" width="4.0816%" height="15" fill="rgb(206,87,28)" fg:x="33" fg:w="2"/><text x="67.5969%" y="351.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (2 samples, 4.08%)</title><rect x="67.3469%" y="325" width="4.0816%" height="15" fill="rgb(226,71,12)" fg:x="33" fg:w="2"/><text x="67.5969%" y="335.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 4.08%)</title><rect x="67.3469%" y="309" width="4.0816%" height="15" fill="rgb(206,69,25)" fg:x="33" fg:w="2"/><text x="67.5969%" y="319.50">&lt;T a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 4.08%)</title><rect x="67.3469%" y="293" width="4.0816%" height="15" fill="rgb(206,47,46)" fg:x="33" fg:w="2"/><text x="67.5969%" y="303.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 4.08%)</title><rect x="67.3469%" y="277" width="4.0816%" height="15" fill="rgb(241,35,13)" fg:x="33" fg:w="2"/><text x="67.5969%" y="287.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 4.08%)</title><rect x="67.3469%" y="261" width="4.0816%" height="15" fill="rgb(206,155,33)" fg:x="33" fg:w="2"/><text x="67.5969%" y="271.50">allo..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 4.08%)</title><rect x="67.3469%" y="245" width="4.0816%" height="15" fill="rgb(231,149,50)" fg:x="33" fg:w="2"/><text x="67.5969%" y="255.50">&lt;all..</text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 4.08%)</title><rect x="67.3469%" y="229" width="4.0816%" height="15" fill="rgb(231,8,7)" fg:x="33" fg:w="2"/><text x="67.5969%" y="239.50">allo..</text></g><g><title>alloc::alloc::alloc (2 samples, 4.08%)</title><rect x="67.3469%" y="213" width="4.0816%" height="15" fill="rgb(240,78,23)" fg:x="33" fg:w="2"/><text x="67.5969%" y="223.50">allo..</text></g><g><title>_rjem_mallocx (2 samples, 4.08%)</title><rect x="67.3469%" y="197" width="4.0816%" height="15" fill="rgb(211,148,10)" fg:x="33" fg:w="2"/><text x="67.5969%" y="207.50">_rje..</text></g><g><title>imalloc (2 samples, 4.08%)</title><rect x="67.3469%" y="181" width="4.0816%" height="15" fill="rgb(245,224,18)" fg:x="33" fg:w="2"/><text x="67.5969%" y="191.50">imal..</text></g><g><title>imalloc_body (2 samples, 4.08%)</title><rect x="67.3469%" y="165" width="4.0816%" height="15" fill="rgb(238,146,38)" fg:x="33" fg:w="2"/><text x="67.5969%" y="175.50">imal..</text></g><g><title>imalloc_no_sample (2 samples, 4.08%)</title><rect x="67.3469%" y="149" width="4.0816%" height="15" fill="rgb(214,177,37)" fg:x="33" fg:w="2"/><text x="67.5969%" y="159.50">imal..</text></g><g><title>iallocztm (2 samples, 4.08%)</title><rect x="67.3469%" y="133" width="4.0816%" height="15" fill="rgb(226,106,51)" fg:x="33" fg:w="2"/><text x="67.5969%" y="143.50">iall..</text></g><g><title>arena_malloc (2 samples, 4.08%)</title><rect x="67.3469%" y="117" width="4.0816%" height="15" fill="rgb(233,9,22)" fg:x="33" fg:w="2"/><text x="67.5969%" y="127.50">aren..</text></g><g><title>tcache_alloc_small (2 samples, 4.08%)</title><rect x="67.3469%" y="101" width="4.0816%" height="15" fill="rgb(249,185,42)" fg:x="33" fg:w="2"/><text x="67.5969%" y="111.50">tcac..</text></g><g><title>cache_bin_alloc_easy (1 samples, 2.04%)</title><rect x="69.3878%" y="85" width="2.0408%" height="15" fill="rgb(213,54,51)" fg:x="34" fg:w="1"/><text x="69.6378%" y="95.50">c..</text></g><g><title>&lt;source_code_parser::prophet::component::MethodParamComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (3 samples, 6.12%)</title><rect x="67.3469%" y="437" width="6.1224%" height="15" fill="rgb(208,23,27)" fg:x="33" fg:w="3"/><text x="67.5969%" y="447.50">&lt;source_..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (3 samples, 6.12%)</title><rect x="67.3469%" y="421" width="6.1224%" height="15" fill="rgb(244,73,32)" fg:x="33" fg:w="3"/><text x="67.5969%" y="431.50">source_c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 2.04%)</title><rect x="71.4286%" y="405" width="2.0408%" height="15" fill="rgb(224,102,20)" fg:x="35" fg:w="1"/><text x="71.6786%" y="415.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 2.04%)</title><rect x="71.4286%" y="389" width="2.0408%" height="15" fill="rgb(213,153,41)" fg:x="35" fg:w="1"/><text x="71.6786%" y="399.50">&lt;..</text></g><g><title>_rjem_sdallocx (1 samples, 2.04%)</title><rect x="71.4286%" y="373" width="2.0408%" height="15" fill="rgb(212,80,42)" fg:x="35" fg:w="1"/><text x="71.6786%" y="383.50">_..</text></g><g><title>isfree (1 samples, 2.04%)</title><rect x="71.4286%" y="357" width="2.0408%" height="15" fill="rgb(241,141,49)" fg:x="35" fg:w="1"/><text x="71.6786%" y="367.50">i..</text></g><g><title>isdalloct (1 samples, 2.04%)</title><rect x="71.4286%" y="341" width="2.0408%" height="15" fill="rgb(243,29,21)" fg:x="35" fg:w="1"/><text x="71.6786%" y="351.50">i..</text></g><g><title>arena_sdalloc (1 samples, 2.04%)</title><rect x="71.4286%" y="325" width="2.0408%" height="15" fill="rgb(227,93,44)" fg:x="35" fg:w="1"/><text x="71.6786%" y="335.50">a..</text></g><g><title>tcache_dalloc_small (1 samples, 2.04%)</title><rect x="71.4286%" y="309" width="2.0408%" height="15" fill="rgb(208,12,25)" fg:x="35" fg:w="1"/><text x="71.6786%" y="319.50">t..</text></g><g><title>&lt;source_code_parser::prophet::component::MethodComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (4 samples, 8.16%)</title><rect x="67.3469%" y="453" width="8.1633%" height="15" fill="rgb(242,22,32)" fg:x="33" fg:w="4"/><text x="67.5969%" y="463.50">&lt;source_cod..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (1 samples, 2.04%)</title><rect x="73.4694%" y="437" width="2.0408%" height="15" fill="rgb(230,79,23)" fg:x="36" fg:w="1"/><text x="73.7194%" y="447.50">s..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 2.04%)</title><rect x="73.4694%" y="421" width="2.0408%" height="15" fill="rgb(253,229,34)" fg:x="36" fg:w="1"/><text x="73.7194%" y="431.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 2.04%)</title><rect x="73.4694%" y="405" width="2.0408%" height="15" fill="rgb(252,152,50)" fg:x="36" fg:w="1"/><text x="73.7194%" y="415.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 2.04%)</title><rect x="73.4694%" y="389" width="2.0408%" height="15" fill="rgb(244,108,29)" fg:x="36" fg:w="1"/><text x="73.7194%" y="399.50">&lt;..</text></g><g><title>source_code_parser::ressa::node_pattern::CompiledPattern::match_and_insert (1 samples, 2.04%)</title><rect x="75.5102%" y="453" width="2.0408%" height="15" fill="rgb(254,197,26)" fg:x="37" fg:w="1"/><text x="75.7602%" y="463.50">s..</text></g><g><title>regex::re_unicode::Regex::captures (1 samples, 2.04%)</title><rect x="75.5102%" y="437" width="2.0408%" height="15" fill="rgb(244,71,28)" fg:x="37" fg:w="1"/><text x="75.7602%" y="447.50">r..</text></g><g><title>regex::re_unicode::Regex::captures_read_at (1 samples, 2.04%)</title><rect x="75.5102%" y="421" width="2.0408%" height="15" fill="rgb(228,182,15)" fg:x="37" fg:w="1"/><text x="75.7602%" y="431.50">r..</text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (1 samples, 2.04%)</title><rect x="75.5102%" y="405" width="2.0408%" height="15" fill="rgb(242,17,12)" fg:x="37" fg:w="1"/><text x="75.7602%" y="415.50">&lt;..</text></g><g><title>regex::dfa::Fsm::next_state (1 samples, 2.04%)</title><rect x="75.5102%" y="389" width="2.0408%" height="15" fill="rgb(247,73,49)" fg:x="37" fg:w="1"/><text x="75.7602%" y="399.50">r..</text></g><g><title>regex::dfa::Fsm::cached_state (1 samples, 2.04%)</title><rect x="75.5102%" y="373" width="2.0408%" height="15" fill="rgb(210,215,21)" fg:x="37" fg:w="1"/><text x="75.7602%" y="383.50">r..</text></g><g><title>regex::dfa::Fsm::add_state (1 samples, 2.04%)</title><rect x="75.5102%" y="357" width="2.0408%" height="15" fill="rgb(213,100,18)" fg:x="37" fg:w="1"/><text x="75.7602%" y="367.50">r..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 2.04%)</title><rect x="75.5102%" y="341" width="2.0408%" height="15" fill="rgb(253,37,7)" fg:x="37" fg:w="1"/><text x="75.7602%" y="351.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 2.04%)</title><rect x="75.5102%" y="325" width="2.0408%" height="15" fill="rgb(225,50,28)" fg:x="37" fg:w="1"/><text x="75.7602%" y="335.50">a..</text></g><g><title>_rjem_rallocx (1 samples, 2.04%)</title><rect x="75.5102%" y="309" width="2.0408%" height="15" fill="rgb(249,72,8)" fg:x="37" fg:w="1"/><text x="75.7602%" y="319.50">_..</text></g><g><title>iralloct (1 samples, 2.04%)</title><rect x="75.5102%" y="293" width="2.0408%" height="15" fill="rgb(216,136,4)" fg:x="37" fg:w="1"/><text x="75.7602%" y="303.50">i..</text></g><g><title>_rjem_je_arena_ralloc (1 samples, 2.04%)</title><rect x="75.5102%" y="277" width="2.0408%" height="15" fill="rgb(235,11,24)" fg:x="37" fg:w="1"/><text x="75.7602%" y="287.50">_..</text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 2.04%)</title><rect x="75.5102%" y="261" width="2.0408%" height="15" fill="rgb(246,201,32)" fg:x="37" fg:w="1"/><text x="75.7602%" y="271.50">_..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 6.12%)</title><rect x="77.5510%" y="437" width="6.1224%" height="15" fill="rgb(207,135,7)" fg:x="38" fg:w="3"/><text x="77.8010%" y="447.50">&lt;hashbro..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 6.12%)</title><rect x="77.5510%" y="421" width="6.1224%" height="15" fill="rgb(245,117,22)" fg:x="38" fg:w="3"/><text x="77.8010%" y="431.50">&lt;hashbro..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 4.08%)</title><rect x="79.5918%" y="405" width="4.0816%" height="15" fill="rgb(212,150,38)" fg:x="39" fg:w="2"/><text x="79.8418%" y="415.50">&lt;all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 2.04%)</title><rect x="81.6327%" y="389" width="2.0408%" height="15" fill="rgb(235,192,17)" fg:x="40" fg:w="1"/><text x="81.8827%" y="399.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 2.04%)</title><rect x="81.6327%" y="373" width="2.0408%" height="15" fill="rgb(234,193,48)" fg:x="40" fg:w="1"/><text x="81.8827%" y="383.50">a..</text></g><g><title>alloc::slice::hack::to_vec (1 samples, 2.04%)</title><rect x="81.6327%" y="357" width="2.0408%" height="15" fill="rgb(249,50,13)" fg:x="40" fg:w="1"/><text x="81.8827%" y="367.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 2.04%)</title><rect x="81.6327%" y="341" width="2.0408%" height="15" fill="rgb(209,213,39)" fg:x="40" fg:w="1"/><text x="81.8827%" y="351.50">&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 2.04%)</title><rect x="81.6327%" y="325" width="2.0408%" height="15" fill="rgb(248,120,14)" fg:x="40" fg:w="1"/><text x="81.8827%" y="335.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 2.04%)</title><rect x="81.6327%" y="309" width="2.0408%" height="15" fill="rgb(252,42,17)" fg:x="40" fg:w="1"/><text x="81.8827%" y="319.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 2.04%)</title><rect x="81.6327%" y="293" width="2.0408%" height="15" fill="rgb(209,4,52)" fg:x="40" fg:w="1"/><text x="81.8827%" y="303.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 2.04%)</title><rect x="81.6327%" y="277" width="2.0408%" height="15" fill="rgb(249,206,46)" fg:x="40" fg:w="1"/><text x="81.8827%" y="287.50">&lt;..</text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 2.04%)</title><rect x="81.6327%" y="261" width="2.0408%" height="15" fill="rgb(227,221,52)" fg:x="40" fg:w="1"/><text x="81.8827%" y="271.50">a..</text></g><g><title>alloc::alloc::alloc (1 samples, 2.04%)</title><rect x="81.6327%" y="245" width="2.0408%" height="15" fill="rgb(254,223,44)" fg:x="40" fg:w="1"/><text x="81.8827%" y="255.50">a..</text></g><g><title>_rjem_mallocx (1 samples, 2.04%)</title><rect x="81.6327%" y="229" width="2.0408%" height="15" fill="rgb(230,200,22)" fg:x="40" fg:w="1"/><text x="81.8827%" y="239.50">_..</text></g><g><title>_start (39 samples, 79.59%)</title><rect x="6.1224%" y="853" width="79.5918%" height="15" fill="rgb(212,223,43)" fg:x="3" fg:w="39"/><text x="6.3724%" y="863.50">_start</text></g><g><title>__libc_start_main (39 samples, 79.59%)</title><rect x="6.1224%" y="837" width="79.5918%" height="15" fill="rgb(220,200,42)" fg:x="3" fg:w="39"/><text x="6.3724%" y="847.50">__libc_start_main</text></g><g><title>main (39 samples, 79.59%)</title><rect x="6.1224%" y="821" width="79.5918%" height="15" fill="rgb(252,169,9)" fg:x="3" fg:w="39"/><text x="6.3724%" y="831.50">main</text></g><g><title>std::rt::lang_start_internal (39 samples, 79.59%)</title><rect x="6.1224%" y="805" width="79.5918%" height="15" fill="rgb(238,130,21)" fg:x="3" fg:w="39"/><text x="6.3724%" y="815.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (39 samples, 79.59%)</title><rect x="6.1224%" y="789" width="79.5918%" height="15" fill="rgb(242,206,17)" fg:x="3" fg:w="39"/><text x="6.3724%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (39 samples, 79.59%)</title><rect x="6.1224%" y="773" width="79.5918%" height="15" fill="rgb(250,171,10)" fg:x="3" fg:w="39"/><text x="6.3724%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (39 samples, 79.59%)</title><rect x="6.1224%" y="757" width="79.5918%" height="15" fill="rgb(253,163,31)" fg:x="3" fg:w="39"/><text x="6.3724%" y="767.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (39 samples, 79.59%)</title><rect x="6.1224%" y="741" width="79.5918%" height="15" fill="rgb(253,50,40)" fg:x="3" fg:w="39"/><text x="6.3724%" y="751.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (39 samples, 79.59%)</title><rect x="6.1224%" y="725" width="79.5918%" height="15" fill="rgb(210,159,12)" fg:x="3" fg:w="39"/><text x="6.3724%" y="735.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (39 samples, 79.59%)</title><rect x="6.1224%" y="709" width="79.5918%" height="15" fill="rgb(252,4,12)" fg:x="3" fg:w="39"/><text x="6.3724%" y="719.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (39 samples, 79.59%)</title><rect x="6.1224%" y="693" width="79.5918%" height="15" fill="rgb(249,135,54)" fg:x="3" fg:w="39"/><text x="6.3724%" y="703.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (39 samples, 79.59%)</title><rect x="6.1224%" y="677" width="79.5918%" height="15" fill="rgb(214,98,36)" fg:x="3" fg:w="39"/><text x="6.3724%" y="687.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (39 samples, 79.59%)</title><rect x="6.1224%" y="661" width="79.5918%" height="15" fill="rgb(237,166,11)" fg:x="3" fg:w="39"/><text x="6.3724%" y="671.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (39 samples, 79.59%)</title><rect x="6.1224%" y="645" width="79.5918%" height="15" fill="rgb(222,85,24)" fg:x="3" fg:w="39"/><text x="6.3724%" y="655.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>ressa_mem_bench::main (39 samples, 79.59%)</title><rect x="6.1224%" y="629" width="79.5918%" height="15" fill="rgb(205,17,14)" fg:x="3" fg:w="39"/><text x="6.3724%" y="639.50">ressa_mem_bench::main</text></g><g><title>ressa_mem_bench::ressa_benchmark (39 samples, 79.59%)</title><rect x="6.1224%" y="613" width="79.5918%" height="15" fill="rgb(233,182,2)" fg:x="3" fg:w="39"/><text x="6.3724%" y="623.50">ressa_mem_bench::ressa_benchmark</text></g><g><title>criterion::Criterion&lt;M&gt;::bench_function (39 samples, 79.59%)</title><rect x="6.1224%" y="597" width="79.5918%" height="15" fill="rgb(254,109,22)" fg:x="3" fg:w="39"/><text x="6.3724%" y="607.50">criterion::Criterion&lt;M&gt;::bench_function</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (39 samples, 79.59%)</title><rect x="6.1224%" y="581" width="79.5918%" height="15" fill="rgb(232,192,16)" fg:x="3" fg:w="39"/><text x="6.3724%" y="591.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::analysis::common (39 samples, 79.59%)</title><rect x="6.1224%" y="565" width="79.5918%" height="15" fill="rgb(210,210,27)" fg:x="3" fg:w="39"/><text x="6.3724%" y="575.50">criterion::analysis::common</text></g><g><title>criterion::routine::Routine::sample (39 samples, 79.59%)</title><rect x="6.1224%" y="549" width="79.5918%" height="15" fill="rgb(238,228,31)" fg:x="3" fg:w="39"/><text x="6.3724%" y="559.50">criterion::routine::Routine::sample</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (39 samples, 79.59%)</title><rect x="6.1224%" y="533" width="79.5918%" height="15" fill="rgb(221,183,32)" fg:x="3" fg:w="39"/><text x="6.3724%" y="543.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>source_code_parser::ressa::run_ressa_parse (38 samples, 77.55%)</title><rect x="8.1633%" y="517" width="77.5510%" height="15" fill="rgb(249,93,36)" fg:x="4" fg:w="38"/><text x="8.4133%" y="527.50">source_code_parser::ressa::run_ressa_parse</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (38 samples, 77.55%)</title><rect x="8.1633%" y="501" width="77.5510%" height="15" fill="rgb(239,42,51)" fg:x="4" fg:w="38"/><text x="8.4133%" y="511.50">&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::ex..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (38 samples, 77.55%)</title><rect x="8.1633%" y="485" width="77.5510%" height="15" fill="rgb(214,45,12)" fg:x="4" fg:w="38"/><text x="8.4133%" y="495.50">source_code_parser::ressa::node_pattern::ressa_node_parse</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::pattern_parser::NodePatternParser&gt;::parse (37 samples, 75.51%)</title><rect x="10.2041%" y="469" width="75.5102%" height="15" fill="rgb(239,16,24)" fg:x="5" fg:w="37"/><text x="10.4541%" y="479.50">&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::pattern_parser::NodePatternP..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (4 samples, 8.16%)</title><rect x="77.5510%" y="453" width="8.1633%" height="15" fill="rgb(232,98,24)" fg:x="38" fg:w="4"/><text x="77.8010%" y="463.50">source_code..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 2.04%)</title><rect x="83.6735%" y="437" width="2.0408%" height="15" fill="rgb(217,144,5)" fg:x="41" fg:w="1"/><text x="83.9235%" y="447.50">&lt;..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 2.04%)</title><rect x="83.6735%" y="421" width="2.0408%" height="15" fill="rgb(248,92,23)" fg:x="41" fg:w="1"/><text x="83.9235%" y="431.50">&lt;..</text></g><g><title>_rjem_sdallocx (1 samples, 2.04%)</title><rect x="83.6735%" y="405" width="2.0408%" height="15" fill="rgb(206,126,27)" fg:x="41" fg:w="1"/><text x="83.9235%" y="415.50">_..</text></g><g><title>isfree (1 samples, 2.04%)</title><rect x="83.6735%" y="389" width="2.0408%" height="15" fill="rgb(214,218,20)" fg:x="41" fg:w="1"/><text x="83.9235%" y="399.50">i..</text></g><g><title>isdalloct (1 samples, 2.04%)</title><rect x="83.6735%" y="373" width="2.0408%" height="15" fill="rgb(240,197,52)" fg:x="41" fg:w="1"/><text x="83.9235%" y="383.50">i..</text></g><g><title>arena_sdalloc (1 samples, 2.04%)</title><rect x="83.6735%" y="357" width="2.0408%" height="15" fill="rgb(228,43,16)" fg:x="41" fg:w="1"/><text x="83.9235%" y="367.50">a..</text></g><g><title>tcache_dalloc_small (1 samples, 2.04%)</title><rect x="83.6735%" y="341" width="2.0408%" height="15" fill="rgb(238,136,21)" fg:x="41" fg:w="1"/><text x="83.9235%" y="351.50">t..</text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 2.04%)</title><rect x="83.6735%" y="325" width="2.0408%" height="15" fill="rgb(210,21,41)" fg:x="41" fg:w="1"/><text x="83.9235%" y="335.50">_..</text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 2.04%)</title><rect x="83.6735%" y="309" width="2.0408%" height="15" fill="rgb(252,66,34)" fg:x="41" fg:w="1"/><text x="83.9235%" y="319.50">_..</text></g><g><title>arena_dalloc_bin_locked_impl (1 samples, 2.04%)</title><rect x="83.6735%" y="293" width="2.0408%" height="15" fill="rgb(229,39,11)" fg:x="41" fg:w="1"/><text x="83.9235%" y="303.50">a..</text></g><g><title>arena_slab_reg_dalloc (1 samples, 2.04%)</title><rect x="83.6735%" y="277" width="2.0408%" height="15" fill="rgb(211,71,34)" fg:x="41" fg:w="1"/><text x="83.9235%" y="287.50">a..</text></g><g><title>bitmap_unset (1 samples, 2.04%)</title><rect x="83.6735%" y="261" width="2.0408%" height="15" fill="rgb(224,71,15)" fg:x="41" fg:w="1"/><text x="83.9235%" y="271.50">b..</text></g><g><title>criterion::analysis::common (1 samples, 2.04%)</title><rect x="85.7143%" y="853" width="2.0408%" height="15" fill="rgb(222,48,36)" fg:x="42" fg:w="1"/><text x="85.9643%" y="863.50">c..</text></g><g><title>criterion::routine::Routine::sample (1 samples, 2.04%)</title><rect x="85.7143%" y="837" width="2.0408%" height="15" fill="rgb(231,133,10)" fg:x="42" fg:w="1"/><text x="85.9643%" y="847.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 2.04%)</title><rect x="85.7143%" y="821" width="2.0408%" height="15" fill="rgb(242,8,41)" fg:x="42" fg:w="1"/><text x="85.9643%" y="831.50">&lt;..</text></g><g><title>source_code_parser::ressa::run_ressa_parse (1 samples, 2.04%)</title><rect x="85.7143%" y="805" width="2.0408%" height="15" fill="rgb(254,101,37)" fg:x="42" fg:w="1"/><text x="85.9643%" y="815.50">s..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (1 samples, 2.04%)</title><rect x="85.7143%" y="789" width="2.0408%" height="15" fill="rgb(222,122,22)" fg:x="42" fg:w="1"/><text x="85.9643%" y="799.50">&lt;..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (1 samples, 2.04%)</title><rect x="85.7143%" y="773" width="2.0408%" height="15" fill="rgb(252,174,26)" fg:x="42" fg:w="1"/><text x="85.9643%" y="783.50">s..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::pattern_parser::NodePatternParser&gt;::parse (1 samples, 2.04%)</title><rect x="85.7143%" y="757" width="2.0408%" height="15" fill="rgb(245,112,19)" fg:x="42" fg:w="1"/><text x="85.9643%" y="767.50">&lt;..</text></g><g><title>&lt;source_code_parser::prophet::component::FieldComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (1 samples, 2.04%)</title><rect x="85.7143%" y="741" width="2.0408%" height="15" fill="rgb(242,70,27)" fg:x="42" fg:w="1"/><text x="85.9643%" y="751.50">&lt;..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (1 samples, 2.04%)</title><rect x="85.7143%" y="725" width="2.0408%" height="15" fill="rgb(206,143,34)" fg:x="42" fg:w="1"/><text x="85.9643%" y="735.50">s..</text></g><g><title>source_code_parser::ressa::callback::Executor::execute (1 samples, 2.04%)</title><rect x="85.7143%" y="709" width="2.0408%" height="15" fill="rgb(218,73,49)" fg:x="42" fg:w="1"/><text x="85.9643%" y="719.50">s..</text></g><g><title>rune::load::load_sources (1 samples, 2.04%)</title><rect x="85.7143%" y="693" width="2.0408%" height="15" fill="rgb(211,217,53)" fg:x="42" fg:w="1"/><text x="85.9643%" y="703.50">r..</text></g><g><title>rune::load::load_sources_with_visitor (1 samples, 2.04%)</title><rect x="85.7143%" y="677" width="2.0408%" height="15" fill="rgb(209,33,1)" fg:x="42" fg:w="1"/><text x="85.9643%" y="687.50">r..</text></g><g><title>rune::compiling::compile_with_options (1 samples, 2.04%)</title><rect x="85.7143%" y="661" width="2.0408%" height="15" fill="rgb(206,65,48)" fg:x="42" fg:w="1"/><text x="85.9643%" y="671.50">r..</text></g><g><title>rune::worker::Worker::run (1 samples, 2.04%)</title><rect x="85.7143%" y="645" width="2.0408%" height="15" fill="rgb(250,54,33)" fg:x="42" fg:w="1"/><text x="85.9643%" y="655.50">r..</text></g><g><title>&lt;rune::ast::file::File as rune::indexing::index::Index&gt;::index (1 samples, 2.04%)</title><rect x="85.7143%" y="629" width="2.0408%" height="15" fill="rgb(213,185,42)" fg:x="42" fg:w="1"/><text x="85.9643%" y="639.50">&lt;..</text></g><g><title>&lt;rune::ast::item::Item as rune::indexing::index::Index&gt;::index (1 samples, 2.04%)</title><rect x="85.7143%" y="613" width="2.0408%" height="15" fill="rgb(213,160,43)" fg:x="42" fg:w="1"/><text x="85.9643%" y="623.50">&lt;..</text></g><g><title>&lt;rune::ast::item_fn::ItemFn as rune::indexing::index::Index&gt;::index (1 samples, 2.04%)</title><rect x="85.7143%" y="597" width="2.0408%" height="15" fill="rgb(228,220,3)" fg:x="42" fg:w="1"/><text x="85.9643%" y="607.50">&lt;..</text></g><g><title>&lt;rune::ast::block::Block as rune::indexing::index::Index&gt;::index (1 samples, 2.04%)</title><rect x="85.7143%" y="581" width="2.0408%" height="15" fill="rgb(246,121,9)" fg:x="42" fg:w="1"/><text x="85.9643%" y="591.50">&lt;..</text></g><g><title>&lt;rune::ast::local::Local as rune::indexing::index::Index&gt;::index (1 samples, 2.04%)</title><rect x="85.7143%" y="565" width="2.0408%" height="15" fill="rgb(228,24,9)" fg:x="42" fg:w="1"/><text x="85.9643%" y="575.50">&lt;..</text></g><g><title>&lt;rune::ast::expr::Expr as rune::indexing::index::Index&gt;::index (1 samples, 2.04%)</title><rect x="85.7143%" y="549" width="2.0408%" height="15" fill="rgb(234,158,41)" fg:x="42" fg:w="1"/><text x="85.9643%" y="559.50">&lt;..</text></g><g><title>&lt;rune::ast::expr::Expr as rune::spanned::Spanned&gt;::span (1 samples, 2.04%)</title><rect x="85.7143%" y="533" width="2.0408%" height="15" fill="rgb(246,81,51)" fg:x="42" fg:w="1"/><text x="85.9643%" y="543.50">&lt;..</text></g><g><title>&lt;rune::ast::expr::Expr as rune::spanned::Spanned&gt;::span (1 samples, 2.04%)</title><rect x="85.7143%" y="517" width="2.0408%" height="15" fill="rgb(250,141,16)" fg:x="42" fg:w="1"/><text x="85.9643%" y="527.50">&lt;..</text></g><g><title>&lt;rune::ast::expr_field_access::ExprFieldAccess as rune::spanned::Spanned&gt;::span (1 samples, 2.04%)</title><rect x="85.7143%" y="501" width="2.0408%" height="15" fill="rgb(216,88,36)" fg:x="42" fg:w="1"/><text x="85.9643%" y="511.50">&lt;..</text></g><g><title>&lt;rune::ast::expr::Expr as rune::spanned::Spanned&gt;::span (1 samples, 2.04%)</title><rect x="85.7143%" y="485" width="2.0408%" height="15" fill="rgb(235,52,51)" fg:x="42" fg:w="1"/><text x="85.9643%" y="495.50">&lt;..</text></g><g><title>&lt;rune::ast::expr::Expr as rune::spanned::Spanned&gt;::span (1 samples, 2.04%)</title><rect x="85.7143%" y="469" width="2.0408%" height="15" fill="rgb(218,143,30)" fg:x="42" fg:w="1"/><text x="85.9643%" y="479.50">&lt;..</text></g><g><title>&lt;rune::ast::expr_field_access::ExprFieldAccess as rune::spanned::Spanned&gt;::span (1 samples, 2.04%)</title><rect x="85.7143%" y="453" width="2.0408%" height="15" fill="rgb(245,128,27)" fg:x="42" fg:w="1"/><text x="85.9643%" y="463.50">&lt;..</text></g><g><title>&lt;rune::ast::expr::Expr as rune::spanned::Spanned&gt;::span (1 samples, 2.04%)</title><rect x="85.7143%" y="437" width="2.0408%" height="15" fill="rgb(223,25,33)" fg:x="42" fg:w="1"/><text x="85.9643%" y="447.50">&lt;..</text></g><g><title>&lt;rune::ast::path::Path as rune::spanned::Spanned&gt;::span (1 samples, 2.04%)</title><rect x="85.7143%" y="421" width="2.0408%" height="15" fill="rgb(253,151,34)" fg:x="42" fg:w="1"/><text x="85.9643%" y="431.50">&lt;..</text></g><g><title>&lt;rune::ast::path::PathSegment as rune::spanned::Spanned&gt;::span (1 samples, 2.04%)</title><rect x="85.7143%" y="405" width="2.0408%" height="15" fill="rgb(235,139,30)" fg:x="42" fg:w="1"/><text x="85.9643%" y="415.50">&lt;..</text></g><g><title>runestick::span::Span::join (1 samples, 2.04%)</title><rect x="85.7143%" y="389" width="2.0408%" height="15" fill="rgb(237,153,2)" fg:x="42" fg:w="1"/><text x="85.9643%" y="399.50">r..</text></g><g><title>rune::compiling::v1::assemble::item_fn::&lt;impl rune::compiling::v1::assemble::AssembleFn for rune::ast::item_fn::ItemFn&gt;::assemble_fn (1 samples, 2.04%)</title><rect x="87.7551%" y="389" width="2.0408%" height="15" fill="rgb(248,64,36)" fg:x="43" fg:w="1"/><text x="88.0051%" y="399.50">r..</text></g><g><title>rune::compiling::v1::assemble::block::&lt;impl rune::compiling::v1::assemble::Assemble for rune::ast::block::Block&gt;::assemble (1 samples, 2.04%)</title><rect x="87.7551%" y="373" width="2.0408%" height="15" fill="rgb(254,84,40)" fg:x="43" fg:w="1"/><text x="88.0051%" y="383.50">r..</text></g><g><title>rune::compiling::v1::assemble::local::&lt;impl rune::compiling::v1::assemble::Assemble for rune::ast::local::Local&gt;::assemble (1 samples, 2.04%)</title><rect x="87.7551%" y="357" width="2.0408%" height="15" fill="rgb(219,190,7)" fg:x="43" fg:w="1"/><text x="88.0051%" y="367.50">r..</text></g><g><title>rune::compiling::v1::Compiler::compile_pat (1 samples, 2.04%)</title><rect x="87.7551%" y="341" width="2.0408%" height="15" fill="rgb(222,134,33)" fg:x="43" fg:w="1"/><text x="88.0051%" y="351.50">r..</text></g><g><title>rune::query::Query::convert_path (1 samples, 2.04%)</title><rect x="87.7551%" y="325" width="2.0408%" height="15" fill="rgb(247,203,38)" fg:x="43" fg:w="1"/><text x="88.0051%" y="335.50">r..</text></g><g><title>runestick::item::write_str (1 samples, 2.04%)</title><rect x="87.7551%" y="309" width="2.0408%" height="15" fill="rgb(220,99,38)" fg:x="43" fg:w="1"/><text x="88.0051%" y="319.50">r..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 2.04%)</title><rect x="87.7551%" y="293" width="2.0408%" height="15" fill="rgb(230,56,24)" fg:x="43" fg:w="1"/><text x="88.0051%" y="303.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 2.04%)</title><rect x="87.7551%" y="277" width="2.0408%" height="15" fill="rgb(228,114,2)" fg:x="43" fg:w="1"/><text x="88.0051%" y="287.50">a..</text></g><g><title>_rjem_rallocx (1 samples, 2.04%)</title><rect x="87.7551%" y="261" width="2.0408%" height="15" fill="rgb(212,114,37)" fg:x="43" fg:w="1"/><text x="88.0051%" y="271.50">_..</text></g><g><title>main (2 samples, 4.08%)</title><rect x="87.7551%" y="853" width="4.0816%" height="15" fill="rgb(244,51,24)" fg:x="43" fg:w="2"/><text x="88.0051%" y="863.50">main</text></g><g><title>std::rt::lang_start_internal (2 samples, 4.08%)</title><rect x="87.7551%" y="837" width="4.0816%" height="15" fill="rgb(234,86,43)" fg:x="43" fg:w="2"/><text x="88.0051%" y="847.50">std:..</text></g><g><title>std::panic::catch_unwind (2 samples, 4.08%)</title><rect x="87.7551%" y="821" width="4.0816%" height="15" fill="rgb(229,102,27)" fg:x="43" fg:w="2"/><text x="88.0051%" y="831.50">std:..</text></g><g><title>std::panicking::try (2 samples, 4.08%)</title><rect x="87.7551%" y="805" width="4.0816%" height="15" fill="rgb(219,147,23)" fg:x="43" fg:w="2"/><text x="88.0051%" y="815.50">std:..</text></g><g><title>std::panicking::try::do_call (2 samples, 4.08%)</title><rect x="87.7551%" y="789" width="4.0816%" height="15" fill="rgb(235,81,38)" fg:x="43" fg:w="2"/><text x="88.0051%" y="799.50">std:..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (2 samples, 4.08%)</title><rect x="87.7551%" y="773" width="4.0816%" height="15" fill="rgb(226,143,50)" fg:x="43" fg:w="2"/><text x="88.0051%" y="783.50">std:..</text></g><g><title>std::panic::catch_unwind (2 samples, 4.08%)</title><rect x="87.7551%" y="757" width="4.0816%" height="15" fill="rgb(208,148,42)" fg:x="43" fg:w="2"/><text x="88.0051%" y="767.50">std:..</text></g><g><title>std::panicking::try (2 samples, 4.08%)</title><rect x="87.7551%" y="741" width="4.0816%" height="15" fill="rgb(225,7,13)" fg:x="43" fg:w="2"/><text x="88.0051%" y="751.50">std:..</text></g><g><title>std::panicking::try::do_call (2 samples, 4.08%)</title><rect x="87.7551%" y="725" width="4.0816%" height="15" fill="rgb(236,120,27)" fg:x="43" fg:w="2"/><text x="88.0051%" y="735.50">std:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2 samples, 4.08%)</title><rect x="87.7551%" y="709" width="4.0816%" height="15" fill="rgb(229,10,35)" fg:x="43" fg:w="2"/><text x="88.0051%" y="719.50">core..</text></g><g><title>std::rt::lang_start::{{closure}} (2 samples, 4.08%)</title><rect x="87.7551%" y="693" width="4.0816%" height="15" fill="rgb(234,204,45)" fg:x="43" fg:w="2"/><text x="88.0051%" y="703.50">std:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 4.08%)</title><rect x="87.7551%" y="677" width="4.0816%" height="15" fill="rgb(217,73,46)" fg:x="43" fg:w="2"/><text x="88.0051%" y="687.50">std:..</text></g><g><title>ressa_mem_bench::main (2 samples, 4.08%)</title><rect x="87.7551%" y="661" width="4.0816%" height="15" fill="rgb(249,182,38)" fg:x="43" fg:w="2"/><text x="88.0051%" y="671.50">ress..</text></g><g><title>ressa_mem_bench::ressa_benchmark (2 samples, 4.08%)</title><rect x="87.7551%" y="645" width="4.0816%" height="15" fill="rgb(221,32,46)" fg:x="43" fg:w="2"/><text x="88.0051%" y="655.50">ress..</text></g><g><title>criterion::Criterion&lt;M&gt;::bench_function (2 samples, 4.08%)</title><rect x="87.7551%" y="629" width="4.0816%" height="15" fill="rgb(206,152,48)" fg:x="43" fg:w="2"/><text x="88.0051%" y="639.50">crit..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (2 samples, 4.08%)</title><rect x="87.7551%" y="613" width="4.0816%" height="15" fill="rgb(232,211,33)" fg:x="43" fg:w="2"/><text x="88.0051%" y="623.50">crit..</text></g><g><title>criterion::analysis::common (2 samples, 4.08%)</title><rect x="87.7551%" y="597" width="4.0816%" height="15" fill="rgb(244,18,45)" fg:x="43" fg:w="2"/><text x="88.0051%" y="607.50">crit..</text></g><g><title>criterion::routine::Routine::sample (2 samples, 4.08%)</title><rect x="87.7551%" y="581" width="4.0816%" height="15" fill="rgb(247,182,31)" fg:x="43" fg:w="2"/><text x="88.0051%" y="591.50">crit..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 4.08%)</title><rect x="87.7551%" y="565" width="4.0816%" height="15" fill="rgb(230,216,30)" fg:x="43" fg:w="2"/><text x="88.0051%" y="575.50">&lt;cor..</text></g><g><title>source_code_parser::ressa::run_ressa_parse (2 samples, 4.08%)</title><rect x="87.7551%" y="549" width="4.0816%" height="15" fill="rgb(242,214,20)" fg:x="43" fg:w="2"/><text x="88.0051%" y="559.50">sour..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (2 samples, 4.08%)</title><rect x="87.7551%" y="533" width="4.0816%" height="15" fill="rgb(247,87,47)" fg:x="43" fg:w="2"/><text x="88.0051%" y="543.50">&lt;sou..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (2 samples, 4.08%)</title><rect x="87.7551%" y="517" width="4.0816%" height="15" fill="rgb(239,128,19)" fg:x="43" fg:w="2"/><text x="88.0051%" y="527.50">sour..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::pattern_parser::NodePatternParser&gt;::parse (2 samples, 4.08%)</title><rect x="87.7551%" y="501" width="4.0816%" height="15" fill="rgb(210,229,32)" fg:x="43" fg:w="2"/><text x="88.0051%" y="511.50">&lt;sou..</text></g><g><title>&lt;source_code_parser::prophet::component::FieldComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (2 samples, 4.08%)</title><rect x="87.7551%" y="485" width="4.0816%" height="15" fill="rgb(247,104,46)" fg:x="43" fg:w="2"/><text x="88.0051%" y="495.50">&lt;sou..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (2 samples, 4.08%)</title><rect x="87.7551%" y="469" width="4.0816%" height="15" fill="rgb(236,172,9)" fg:x="43" fg:w="2"/><text x="88.0051%" y="479.50">sour..</text></g><g><title>source_code_parser::ressa::callback::Executor::execute (2 samples, 4.08%)</title><rect x="87.7551%" y="453" width="4.0816%" height="15" fill="rgb(252,198,23)" fg:x="43" fg:w="2"/><text x="88.0051%" y="463.50">sour..</text></g><g><title>rune::load::load_sources (2 samples, 4.08%)</title><rect x="87.7551%" y="437" width="4.0816%" height="15" fill="rgb(217,141,29)" fg:x="43" fg:w="2"/><text x="88.0051%" y="447.50">rune..</text></g><g><title>rune::load::load_sources_with_visitor (2 samples, 4.08%)</title><rect x="87.7551%" y="421" width="4.0816%" height="15" fill="rgb(244,79,51)" fg:x="43" fg:w="2"/><text x="88.0051%" y="431.50">rune..</text></g><g><title>rune::compiling::compile_with_options (2 samples, 4.08%)</title><rect x="87.7551%" y="405" width="4.0816%" height="15" fill="rgb(213,3,49)" fg:x="43" fg:w="2"/><text x="88.0051%" y="415.50">rune..</text></g><g><title>rune::worker::Worker::run (1 samples, 2.04%)</title><rect x="89.7959%" y="389" width="2.0408%" height="15" fill="rgb(252,168,2)" fg:x="44" fg:w="1"/><text x="90.0459%" y="399.50">r..</text></g><g><title>&lt;rune::ast::file::File as rune::indexing::index::Index&gt;::index (1 samples, 2.04%)</title><rect x="89.7959%" y="373" width="2.0408%" height="15" fill="rgb(224,64,8)" fg:x="44" fg:w="1"/><text x="90.0459%" y="383.50">&lt;..</text></g><g><title>&lt;rune::ast::item::Item as rune::indexing::index::Index&gt;::index (1 samples, 2.04%)</title><rect x="89.7959%" y="357" width="2.0408%" height="15" fill="rgb(206,198,21)" fg:x="44" fg:w="1"/><text x="90.0459%" y="367.50">&lt;..</text></g><g><title>&lt;rune::ast::item_fn::ItemFn as rune::indexing::index::Index&gt;::index (1 samples, 2.04%)</title><rect x="89.7959%" y="341" width="2.0408%" height="15" fill="rgb(212,61,54)" fg:x="44" fg:w="1"/><text x="90.0459%" y="351.50">&lt;..</text></g><g><title>&lt;rune::ast::item_fn::ItemFn as core::clone::Clone&gt;::clone (1 samples, 2.04%)</title><rect x="89.7959%" y="325" width="2.0408%" height="15" fill="rgb(233,60,30)" fg:x="44" fg:w="1"/><text x="90.0459%" y="335.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 2.04%)</title><rect x="89.7959%" y="309" width="2.0408%" height="15" fill="rgb(234,114,44)" fg:x="44" fg:w="1"/><text x="90.0459%" y="319.50">&lt;..</text></g><g><title>&lt;rune::ast::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 2.04%)</title><rect x="89.7959%" y="293" width="2.0408%" height="15" fill="rgb(245,203,33)" fg:x="44" fg:w="1"/><text x="90.0459%" y="303.50">&lt;..</text></g><g><title>&lt;rune::ast::expr::Expr as core::clone::Clone&gt;::clone (1 samples, 2.04%)</title><rect x="89.7959%" y="277" width="2.0408%" height="15" fill="rgb(221,26,21)" fg:x="44" fg:w="1"/><text x="90.0459%" y="287.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 2.04%)</title><rect x="89.7959%" y="261" width="2.0408%" height="15" fill="rgb(214,201,49)" fg:x="44" fg:w="1"/><text x="90.0459%" y="271.50">a..</text></g><g><title>ressa_mem_bench::main (1 samples, 2.04%)</title><rect x="91.8367%" y="853" width="2.0408%" height="15" fill="rgb(244,196,35)" fg:x="45" fg:w="1"/><text x="92.0867%" y="863.50">r..</text></g><g><title>ressa_mem_bench::ressa_benchmark (1 samples, 2.04%)</title><rect x="91.8367%" y="837" width="2.0408%" height="15" fill="rgb(214,76,32)" fg:x="45" fg:w="1"/><text x="92.0867%" y="847.50">r..</text></g><g><title>criterion::Criterion&lt;M&gt;::bench_function (1 samples, 2.04%)</title><rect x="91.8367%" y="821" width="2.0408%" height="15" fill="rgb(240,216,8)" fg:x="45" fg:w="1"/><text x="92.0867%" y="831.50">c..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1 samples, 2.04%)</title><rect x="91.8367%" y="805" width="2.0408%" height="15" fill="rgb(254,210,54)" fg:x="45" fg:w="1"/><text x="92.0867%" y="815.50">c..</text></g><g><title>criterion::analysis::common (1 samples, 2.04%)</title><rect x="91.8367%" y="789" width="2.0408%" height="15" fill="rgb(248,44,38)" fg:x="45" fg:w="1"/><text x="92.0867%" y="799.50">c..</text></g><g><title>criterion::routine::Routine::sample (1 samples, 2.04%)</title><rect x="91.8367%" y="773" width="2.0408%" height="15" fill="rgb(210,153,0)" fg:x="45" fg:w="1"/><text x="92.0867%" y="783.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 2.04%)</title><rect x="91.8367%" y="757" width="2.0408%" height="15" fill="rgb(242,126,8)" fg:x="45" fg:w="1"/><text x="92.0867%" y="767.50">&lt;..</text></g><g><title>source_code_parser::ressa::run_ressa_parse (1 samples, 2.04%)</title><rect x="91.8367%" y="741" width="2.0408%" height="15" fill="rgb(231,186,11)" fg:x="45" fg:w="1"/><text x="92.0867%" y="751.50">s..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (1 samples, 2.04%)</title><rect x="91.8367%" y="725" width="2.0408%" height="15" fill="rgb(234,32,21)" fg:x="45" fg:w="1"/><text x="92.0867%" y="735.50">&lt;..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (1 samples, 2.04%)</title><rect x="91.8367%" y="709" width="2.0408%" height="15" fill="rgb(237,142,31)" fg:x="45" fg:w="1"/><text x="92.0867%" y="719.50">s..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::pattern_parser::NodePatternParser&gt;::parse (1 samples, 2.04%)</title><rect x="91.8367%" y="693" width="2.0408%" height="15" fill="rgb(251,195,39)" fg:x="45" fg:w="1"/><text x="92.0867%" y="703.50">&lt;..</text></g><g><title>&lt;source_code_parser::prophet::component::FieldComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (1 samples, 2.04%)</title><rect x="91.8367%" y="677" width="2.0408%" height="15" fill="rgb(216,40,34)" fg:x="45" fg:w="1"/><text x="92.0867%" y="687.50">&lt;..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (1 samples, 2.04%)</title><rect x="91.8367%" y="661" width="2.0408%" height="15" fill="rgb(205,124,36)" fg:x="45" fg:w="1"/><text x="92.0867%" y="671.50">s..</text></g><g><title>source_code_parser::ressa::callback::Executor::execute (1 samples, 2.04%)</title><rect x="91.8367%" y="645" width="2.0408%" height="15" fill="rgb(242,31,4)" fg:x="45" fg:w="1"/><text x="92.0867%" y="655.50">s..</text></g><g><title>rune::load::load_sources (1 samples, 2.04%)</title><rect x="91.8367%" y="629" width="2.0408%" height="15" fill="rgb(226,168,0)" fg:x="45" fg:w="1"/><text x="92.0867%" y="639.50">r..</text></g><g><title>rune::load::load_sources_with_visitor (1 samples, 2.04%)</title><rect x="91.8367%" y="613" width="2.0408%" height="15" fill="rgb(212,47,6)" fg:x="45" fg:w="1"/><text x="92.0867%" y="623.50">r..</text></g><g><title>rune::compiling::compile_with_options (1 samples, 2.04%)</title><rect x="91.8367%" y="597" width="2.0408%" height="15" fill="rgb(243,125,43)" fg:x="45" fg:w="1"/><text x="92.0867%" y="607.50">r..</text></g><g><title>rune::worker::Worker::run (1 samples, 2.04%)</title><rect x="91.8367%" y="581" width="2.0408%" height="15" fill="rgb(214,92,3)" fg:x="45" fg:w="1"/><text x="92.0867%" y="591.50">r..</text></g><g><title>rune::parse_all (1 samples, 2.04%)</title><rect x="91.8367%" y="565" width="2.0408%" height="15" fill="rgb(250,27,50)" fg:x="45" fg:w="1"/><text x="92.0867%" y="575.50">r..</text></g><g><title>&lt;rune::ast::file::File as rune::parsing::parse::Parse&gt;::parse (1 samples, 2.04%)</title><rect x="91.8367%" y="549" width="2.0408%" height="15" fill="rgb(221,33,3)" fg:x="45" fg:w="1"/><text x="92.0867%" y="559.50">&lt;..</text></g><g><title>rune::ast::item::Item::parse_with_meta_path (1 samples, 2.04%)</title><rect x="91.8367%" y="533" width="2.0408%" height="15" fill="rgb(249,197,27)" fg:x="45" fg:w="1"/><text x="92.0867%" y="543.50">r..</text></g><g><title>rune::ast::item_fn::ItemFn::parse_with_meta (1 samples, 2.04%)</title><rect x="91.8367%" y="517" width="2.0408%" height="15" fill="rgb(253,97,20)" fg:x="45" fg:w="1"/><text x="92.0867%" y="527.50">r..</text></g><g><title>&lt;rune::ast::block::Block as rune::parsing::parse::Parse&gt;::parse (1 samples, 2.04%)</title><rect x="91.8367%" y="501" width="2.0408%" height="15" fill="rgb(246,204,45)" fg:x="45" fg:w="1"/><text x="92.0867%" y="511.50">&lt;..</text></g><g><title>&lt;rune::ast::stmt::Stmt as rune::parsing::parse::Parse&gt;::parse (1 samples, 2.04%)</title><rect x="91.8367%" y="485" width="2.0408%" height="15" fill="rgb(236,202,2)" fg:x="45" fg:w="1"/><text x="92.0867%" y="495.50">&lt;..</text></g><g><title>rune::ast::local::Local::parse_with_meta (1 samples, 2.04%)</title><rect x="91.8367%" y="469" width="2.0408%" height="15" fill="rgb(223,227,4)" fg:x="45" fg:w="1"/><text x="92.0867%" y="479.50">r..</text></g><g><title>rune::ast::expr::Expr::parse_with (1 samples, 2.04%)</title><rect x="91.8367%" y="453" width="2.0408%" height="15" fill="rgb(211,3,14)" fg:x="45" fg:w="1"/><text x="92.0867%" y="463.50">r..</text></g><g><title>rune::ast::expr::Expr::parse_chain (1 samples, 2.04%)</title><rect x="91.8367%" y="437" width="2.0408%" height="15" fill="rgb(239,168,43)" fg:x="45" fg:w="1"/><text x="92.0867%" y="447.50">r..</text></g><g><title>rune::parsing::parser::Peeker::at (1 samples, 2.04%)</title><rect x="91.8367%" y="421" width="2.0408%" height="15" fill="rgb(241,19,19)" fg:x="45" fg:w="1"/><text x="92.0867%" y="431.50">r..</text></g><g><title>rune::parsing::lexer::Lexer::next (1 samples, 2.04%)</title><rect x="91.8367%" y="405" width="2.0408%" height="15" fill="rgb(234,17,50)" fg:x="45" fg:w="1"/><text x="92.0867%" y="415.50">r..</text></g><g><title>rune::ast::generated::Kind::from_keyword (1 samples, 2.04%)</title><rect x="91.8367%" y="389" width="2.0408%" height="15" fill="rgb(236,157,10)" fg:x="45" fg:w="1"/><text x="92.0867%" y="399.50">r..</text></g><g><title>&lt;rune::ast::pat::Pat as rune::parsing::parse::Parse&gt;::parse (1 samples, 2.04%)</title><rect x="93.8776%" y="421" width="2.0408%" height="15" fill="rgb(222,140,8)" fg:x="46" fg:w="1"/><text x="94.1276%" y="431.50">&lt;..</text></g><g><title>&lt;rune::ast::path::Path as rune::parsing::peek::Peek&gt;::peek (1 samples, 2.04%)</title><rect x="93.8776%" y="405" width="2.0408%" height="15" fill="rgb(247,99,9)" fg:x="46" fg:w="1"/><text x="94.1276%" y="415.50">&lt;..</text></g><g><title>rune::parsing::parser::Peeker::at (1 samples, 2.04%)</title><rect x="93.8776%" y="389" width="2.0408%" height="15" fill="rgb(227,179,1)" fg:x="46" fg:w="1"/><text x="94.1276%" y="399.50">r..</text></g><g><title>std::rt::lang_start::{{closure}} (2 samples, 4.08%)</title><rect x="93.8776%" y="853" width="4.0816%" height="15" fill="rgb(244,185,19)" fg:x="46" fg:w="2"/><text x="94.1276%" y="863.50">std:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 4.08%)</title><rect x="93.8776%" y="837" width="4.0816%" height="15" fill="rgb(216,211,31)" fg:x="46" fg:w="2"/><text x="94.1276%" y="847.50">std:..</text></g><g><title>ressa_mem_bench::main (2 samples, 4.08%)</title><rect x="93.8776%" y="821" width="4.0816%" height="15" fill="rgb(224,92,13)" fg:x="46" fg:w="2"/><text x="94.1276%" y="831.50">ress..</text></g><g><title>ressa_mem_bench::ressa_benchmark (2 samples, 4.08%)</title><rect x="93.8776%" y="805" width="4.0816%" height="15" fill="rgb(237,3,27)" fg:x="46" fg:w="2"/><text x="94.1276%" y="815.50">ress..</text></g><g><title>criterion::Criterion&lt;M&gt;::bench_function (2 samples, 4.08%)</title><rect x="93.8776%" y="789" width="4.0816%" height="15" fill="rgb(251,17,53)" fg:x="46" fg:w="2"/><text x="94.1276%" y="799.50">crit..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (2 samples, 4.08%)</title><rect x="93.8776%" y="773" width="4.0816%" height="15" fill="rgb(252,139,39)" fg:x="46" fg:w="2"/><text x="94.1276%" y="783.50">crit..</text></g><g><title>criterion::analysis::common (2 samples, 4.08%)</title><rect x="93.8776%" y="757" width="4.0816%" height="15" fill="rgb(240,219,1)" fg:x="46" fg:w="2"/><text x="94.1276%" y="767.50">crit..</text></g><g><title>criterion::routine::Routine::sample (2 samples, 4.08%)</title><rect x="93.8776%" y="741" width="4.0816%" height="15" fill="rgb(226,147,53)" fg:x="46" fg:w="2"/><text x="94.1276%" y="751.50">crit..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 4.08%)</title><rect x="93.8776%" y="725" width="4.0816%" height="15" fill="rgb(225,130,46)" fg:x="46" fg:w="2"/><text x="94.1276%" y="735.50">&lt;cor..</text></g><g><title>source_code_parser::ressa::run_ressa_parse (2 samples, 4.08%)</title><rect x="93.8776%" y="709" width="4.0816%" height="15" fill="rgb(210,186,48)" fg:x="46" fg:w="2"/><text x="94.1276%" y="719.50">sour..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (2 samples, 4.08%)</title><rect x="93.8776%" y="693" width="4.0816%" height="15" fill="rgb(230,134,49)" fg:x="46" fg:w="2"/><text x="94.1276%" y="703.50">&lt;sou..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (2 samples, 4.08%)</title><rect x="93.8776%" y="677" width="4.0816%" height="15" fill="rgb(236,0,16)" fg:x="46" fg:w="2"/><text x="94.1276%" y="687.50">sour..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::pattern_parser::NodePatternParser&gt;::parse (2 samples, 4.08%)</title><rect x="93.8776%" y="661" width="4.0816%" height="15" fill="rgb(224,59,34)" fg:x="46" fg:w="2"/><text x="94.1276%" y="671.50">&lt;sou..</text></g><g><title>&lt;source_code_parser::prophet::component::FieldComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (2 samples, 4.08%)</title><rect x="93.8776%" y="645" width="4.0816%" height="15" fill="rgb(222,123,47)" fg:x="46" fg:w="2"/><text x="94.1276%" y="655.50">&lt;sou..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (2 samples, 4.08%)</title><rect x="93.8776%" y="629" width="4.0816%" height="15" fill="rgb(216,30,14)" fg:x="46" fg:w="2"/><text x="94.1276%" y="639.50">sour..</text></g><g><title>source_code_parser::ressa::callback::Executor::execute (2 samples, 4.08%)</title><rect x="93.8776%" y="613" width="4.0816%" height="15" fill="rgb(210,4,21)" fg:x="46" fg:w="2"/><text x="94.1276%" y="623.50">sour..</text></g><g><title>rune::load::load_sources (2 samples, 4.08%)</title><rect x="93.8776%" y="597" width="4.0816%" height="15" fill="rgb(241,80,1)" fg:x="46" fg:w="2"/><text x="94.1276%" y="607.50">rune..</text></g><g><title>rune::load::load_sources_with_visitor (2 samples, 4.08%)</title><rect x="93.8776%" y="581" width="4.0816%" height="15" fill="rgb(222,128,17)" fg:x="46" fg:w="2"/><text x="94.1276%" y="591.50">rune..</text></g><g><title>rune::compiling::compile_with_options (2 samples, 4.08%)</title><rect x="93.8776%" y="565" width="4.0816%" height="15" fill="rgb(229,202,6)" fg:x="46" fg:w="2"/><text x="94.1276%" y="575.50">rune..</text></g><g><title>rune::worker::Worker::run (2 samples, 4.08%)</title><rect x="93.8776%" y="549" width="4.0816%" height="15" fill="rgb(224,9,13)" fg:x="46" fg:w="2"/><text x="94.1276%" y="559.50">rune..</text></g><g><title>rune::parse_all (2 samples, 4.08%)</title><rect x="93.8776%" y="533" width="4.0816%" height="15" fill="rgb(210,63,5)" fg:x="46" fg:w="2"/><text x="94.1276%" y="543.50">rune..</text></g><g><title>&lt;rune::ast::file::File as rune::parsing::parse::Parse&gt;::parse (2 samples, 4.08%)</title><rect x="93.8776%" y="517" width="4.0816%" height="15" fill="rgb(242,107,20)" fg:x="46" fg:w="2"/><text x="94.1276%" y="527.50">&lt;run..</text></g><g><title>rune::ast::item::Item::parse_with_meta_path (2 samples, 4.08%)</title><rect x="93.8776%" y="501" width="4.0816%" height="15" fill="rgb(236,169,54)" fg:x="46" fg:w="2"/><text x="94.1276%" y="511.50">rune..</text></g><g><title>rune::ast::item_fn::ItemFn::parse_with_meta (2 samples, 4.08%)</title><rect x="93.8776%" y="485" width="4.0816%" height="15" fill="rgb(218,203,48)" fg:x="46" fg:w="2"/><text x="94.1276%" y="495.50">rune..</text></g><g><title>&lt;rune::ast::block::Block as rune::parsing::parse::Parse&gt;::parse (2 samples, 4.08%)</title><rect x="93.8776%" y="469" width="4.0816%" height="15" fill="rgb(224,60,31)" fg:x="46" fg:w="2"/><text x="94.1276%" y="479.50">&lt;run..</text></g><g><title>&lt;rune::ast::stmt::Stmt as rune::parsing::parse::Parse&gt;::parse (2 samples, 4.08%)</title><rect x="93.8776%" y="453" width="4.0816%" height="15" fill="rgb(216,78,25)" fg:x="46" fg:w="2"/><text x="94.1276%" y="463.50">&lt;run..</text></g><g><title>rune::ast::local::Local::parse_with_meta (2 samples, 4.08%)</title><rect x="93.8776%" y="437" width="4.0816%" height="15" fill="rgb(219,173,46)" fg:x="46" fg:w="2"/><text x="94.1276%" y="447.50">rune..</text></g><g><title>rune::ast::expr::Expr::parse_with (1 samples, 2.04%)</title><rect x="95.9184%" y="421" width="2.0408%" height="15" fill="rgb(231,102,29)" fg:x="47" fg:w="1"/><text x="96.1684%" y="431.50">r..</text></g><g><title>rune::ast::expr::Expr::parse_chain (1 samples, 2.04%)</title><rect x="95.9184%" y="405" width="2.0408%" height="15" fill="rgb(209,129,17)" fg:x="47" fg:w="1"/><text x="96.1684%" y="415.50">r..</text></g><g><title>rune::parsing::parser::Peeker::at (1 samples, 2.04%)</title><rect x="95.9184%" y="389" width="2.0408%" height="15" fill="rgb(248,123,30)" fg:x="47" fg:w="1"/><text x="96.1684%" y="399.50">r..</text></g><g><title>all (49 samples, 100%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(211,83,45)" fg:x="0" fg:w="49"/><text x="0.2500%" y="895.50"></text></g><g><title>ressa_mem_bench (49 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(210,85,20)" fg:x="0" fg:w="49"/><text x="0.2500%" y="879.50">ressa_mem_bench</text></g><g><title>std::rt::lang_start_internal (1 samples, 2.04%)</title><rect x="97.9592%" y="853" width="2.0408%" height="15" fill="rgb(254,198,27)" fg:x="48" fg:w="1"/><text x="98.2092%" y="863.50">s..</text></g><g><title>std::panic::catch_unwind (1 samples, 2.04%)</title><rect x="97.9592%" y="837" width="2.0408%" height="15" fill="rgb(217,156,26)" fg:x="48" fg:w="1"/><text x="98.2092%" y="847.50">s..</text></g><g><title>std::panicking::try (1 samples, 2.04%)</title><rect x="97.9592%" y="821" width="2.0408%" height="15" fill="rgb(227,162,9)" fg:x="48" fg:w="1"/><text x="98.2092%" y="831.50">s..</text></g><g><title>std::panicking::try::do_call (1 samples, 2.04%)</title><rect x="97.9592%" y="805" width="2.0408%" height="15" fill="rgb(211,75,28)" fg:x="48" fg:w="1"/><text x="98.2092%" y="815.50">s..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 2.04%)</title><rect x="97.9592%" y="789" width="2.0408%" height="15" fill="rgb(246,177,4)" fg:x="48" fg:w="1"/><text x="98.2092%" y="799.50">s..</text></g><g><title>std::panic::catch_unwind (1 samples, 2.04%)</title><rect x="97.9592%" y="773" width="2.0408%" height="15" fill="rgb(224,164,45)" fg:x="48" fg:w="1"/><text x="98.2092%" y="783.50">s..</text></g><g><title>std::panicking::try (1 samples, 2.04%)</title><rect x="97.9592%" y="757" width="2.0408%" height="15" fill="rgb(227,227,37)" fg:x="48" fg:w="1"/><text x="98.2092%" y="767.50">s..</text></g><g><title>std::panicking::try::do_call (1 samples, 2.04%)</title><rect x="97.9592%" y="741" width="2.0408%" height="15" fill="rgb(205,30,23)" fg:x="48" fg:w="1"/><text x="98.2092%" y="751.50">s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 2.04%)</title><rect x="97.9592%" y="725" width="2.0408%" height="15" fill="rgb(208,225,16)" fg:x="48" fg:w="1"/><text x="98.2092%" y="735.50">c..</text></g><g><title>std::rt::lang_start::{{closure}} (1 samples, 2.04%)</title><rect x="97.9592%" y="709" width="2.0408%" height="15" fill="rgb(224,48,49)" fg:x="48" fg:w="1"/><text x="98.2092%" y="719.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 2.04%)</title><rect x="97.9592%" y="693" width="2.0408%" height="15" fill="rgb(214,58,37)" fg:x="48" fg:w="1"/><text x="98.2092%" y="703.50">s..</text></g><g><title>ressa_mem_bench::main (1 samples, 2.04%)</title><rect x="97.9592%" y="677" width="2.0408%" height="15" fill="rgb(238,168,16)" fg:x="48" fg:w="1"/><text x="98.2092%" y="687.50">r..</text></g><g><title>ressa_mem_bench::ressa_benchmark (1 samples, 2.04%)</title><rect x="97.9592%" y="661" width="2.0408%" height="15" fill="rgb(245,84,24)" fg:x="48" fg:w="1"/><text x="98.2092%" y="671.50">r..</text></g><g><title>criterion::Criterion&lt;M&gt;::bench_function (1 samples, 2.04%)</title><rect x="97.9592%" y="645" width="2.0408%" height="15" fill="rgb(253,44,29)" fg:x="48" fg:w="1"/><text x="98.2092%" y="655.50">c..</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1 samples, 2.04%)</title><rect x="97.9592%" y="629" width="2.0408%" height="15" fill="rgb(206,86,25)" fg:x="48" fg:w="1"/><text x="98.2092%" y="639.50">c..</text></g><g><title>criterion::analysis::common (1 samples, 2.04%)</title><rect x="97.9592%" y="613" width="2.0408%" height="15" fill="rgb(216,97,31)" fg:x="48" fg:w="1"/><text x="98.2092%" y="623.50">c..</text></g><g><title>criterion::routine::Routine::sample (1 samples, 2.04%)</title><rect x="97.9592%" y="597" width="2.0408%" height="15" fill="rgb(207,48,1)" fg:x="48" fg:w="1"/><text x="98.2092%" y="607.50">c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 2.04%)</title><rect x="97.9592%" y="581" width="2.0408%" height="15" fill="rgb(240,79,31)" fg:x="48" fg:w="1"/><text x="98.2092%" y="591.50">&lt;..</text></g><g><title>source_code_parser::ressa::run_ressa_parse (1 samples, 2.04%)</title><rect x="97.9592%" y="565" width="2.0408%" height="15" fill="rgb(220,52,27)" fg:x="48" fg:w="1"/><text x="98.2092%" y="575.50">s..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (1 samples, 2.04%)</title><rect x="97.9592%" y="549" width="2.0408%" height="15" fill="rgb(224,166,29)" fg:x="48" fg:w="1"/><text x="98.2092%" y="559.50">&lt;..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (1 samples, 2.04%)</title><rect x="97.9592%" y="533" width="2.0408%" height="15" fill="rgb(233,170,6)" fg:x="48" fg:w="1"/><text x="98.2092%" y="543.50">s..</text></g><g><title>&lt;source_code_parser::prophet::component::ClassOrInterfaceComponent as source_code_parser::ressa::pattern_parser::NodePatternParser&gt;::parse (1 samples, 2.04%)</title><rect x="97.9592%" y="517" width="2.0408%" height="15" fill="rgb(252,153,18)" fg:x="48" fg:w="1"/><text x="98.2092%" y="527.50">&lt;..</text></g><g><title>&lt;source_code_parser::prophet::component::FieldComponent as source_code_parser::ressa::explorer::RessaNodeExplorer&gt;::explore (1 samples, 2.04%)</title><rect x="97.9592%" y="501" width="2.0408%" height="15" fill="rgb(241,172,4)" fg:x="48" fg:w="1"/><text x="98.2092%" y="511.50">&lt;..</text></g><g><title>source_code_parser::ressa::node_pattern::ressa_node_parse (1 samples, 2.04%)</title><rect x="97.9592%" y="485" width="2.0408%" height="15" fill="rgb(212,69,5)" fg:x="48" fg:w="1"/><text x="98.2092%" y="495.50">s..</text></g><g><title>source_code_parser::ressa::callback::Executor::execute (1 samples, 2.04%)</title><rect x="97.9592%" y="469" width="2.0408%" height="15" fill="rgb(239,89,44)" fg:x="48" fg:w="1"/><text x="98.2092%" y="479.50">s..</text></g><g><title>rune::load::load_sources (1 samples, 2.04%)</title><rect x="97.9592%" y="453" width="2.0408%" height="15" fill="rgb(220,207,21)" fg:x="48" fg:w="1"/><text x="98.2092%" y="463.50">r..</text></g><g><title>rune::load::load_sources_with_visitor (1 samples, 2.04%)</title><rect x="97.9592%" y="437" width="2.0408%" height="15" fill="rgb(225,123,14)" fg:x="48" fg:w="1"/><text x="98.2092%" y="447.50">r..</text></g><g><title>rune::compiling::compile_with_options (1 samples, 2.04%)</title><rect x="97.9592%" y="421" width="2.0408%" height="15" fill="rgb(217,39,3)" fg:x="48" fg:w="1"/><text x="98.2092%" y="431.50">r..</text></g><g><title>rune::worker::Worker::run (1 samples, 2.04%)</title><rect x="97.9592%" y="405" width="2.0408%" height="15" fill="rgb(253,3,17)" fg:x="48" fg:w="1"/><text x="98.2092%" y="415.50">r..</text></g><g><title>rune::parse_all (1 samples, 2.04%)</title><rect x="97.9592%" y="389" width="2.0408%" height="15" fill="rgb(231,101,27)" fg:x="48" fg:w="1"/><text x="98.2092%" y="399.50">r..</text></g><g><title>&lt;rune::ast::file::File as rune::parsing::parse::Parse&gt;::parse (1 samples, 2.04%)</title><rect x="97.9592%" y="373" width="2.0408%" height="15" fill="rgb(229,182,3)" fg:x="48" fg:w="1"/><text x="98.2092%" y="383.50">&lt;..</text></g><g><title>rune::ast::item::Item::parse_with_meta_path (1 samples, 2.04%)</title><rect x="97.9592%" y="357" width="2.0408%" height="15" fill="rgb(218,91,29)" fg:x="48" fg:w="1"/><text x="98.2092%" y="367.50">r..</text></g><g><title>rune::ast::item_fn::ItemFn::parse_with_meta (1 samples, 2.04%)</title><rect x="97.9592%" y="341" width="2.0408%" height="15" fill="rgb(210,175,27)" fg:x="48" fg:w="1"/><text x="98.2092%" y="351.50">r..</text></g><g><title>&lt;rune::ast::block::Block as rune::parsing::parse::Parse&gt;::parse (1 samples, 2.04%)</title><rect x="97.9592%" y="325" width="2.0408%" height="15" fill="rgb(207,33,14)" fg:x="48" fg:w="1"/><text x="98.2092%" y="335.50">&lt;..</text></g><g><title>&lt;rune::ast::stmt::Stmt as rune::parsing::parse::Parse&gt;::parse (1 samples, 2.04%)</title><rect x="97.9592%" y="309" width="2.0408%" height="15" fill="rgb(251,104,38)" fg:x="48" fg:w="1"/><text x="98.2092%" y="319.50">&lt;..</text></g><g><title>rune::ast::local::Local::parse_with_meta (1 samples, 2.04%)</title><rect x="97.9592%" y="293" width="2.0408%" height="15" fill="rgb(205,110,16)" fg:x="48" fg:w="1"/><text x="98.2092%" y="303.50">r..</text></g><g><title>rune::ast::expr::Expr::parse_with (1 samples, 2.04%)</title><rect x="97.9592%" y="277" width="2.0408%" height="15" fill="rgb(243,121,14)" fg:x="48" fg:w="1"/><text x="98.2092%" y="287.50">r..</text></g><g><title>rune::ast::expr::Expr::parse_chain (1 samples, 2.04%)</title><rect x="97.9592%" y="261" width="2.0408%" height="15" fill="rgb(227,180,5)" fg:x="48" fg:w="1"/><text x="98.2092%" y="271.50">r..</text></g></svg></svg>